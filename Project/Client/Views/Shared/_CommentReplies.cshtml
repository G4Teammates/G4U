@using Client.Models.ProductDTO
@model ProductViewModel

@foreach (var reply in Model.Reply)
{
    <div class="comment">
        <div class="row">
            <div class="col-md-1 comment-icon d-flex justify-content-center mt-5">
                <i class="fa-solid fa-user-secret"></i>
            </div>
            <div class="col-md-11 comment-body">
                <div class="comment-header">
                    <p><strong>@reply.UserName</strong></p>
                    <p class="created-at">@reply.CreatedAt.ToString("g")</p>
                </div>
                <div class="comment-content">
                    <p>@reply.Content</p>
                </div>
            </div>
        </div>


        <div class="row">
            <!-- Nút "Xem thêm" -->
            <div class="col-md-6 text-start">
                <a id="toggleButton-@reply.Id"
                   class="link-action"
                   onclick="toggleReplies('@reply.Id')"
                   style="width:50%; text-decoration:none; color:black; padding:5px; border-radius:5px; transition: all 0.3s;">
                    Xem thêm
                </a>
                |
                <a class="link-action"
                   onclick="scrollToReplyForm('@reply.Id')"
                   style="width:50%; text-decoration:none; color:black; padding:5px; border-radius:5px; transition: all 0.3s;">
                    Reply
                </a>
            </div>

            <div class="col-md-6 comment-footer text-end">
                <p class="likes">
                    <small>
                        <span id="like-count-@reply.Id">@reply.NumberOfLikes</span>

                        <!-- Form for Increasing Like -->
                        <form asp-action="IncreaseLike" asp-controller="Product" method="post" style="display:inline;" class="like-form">
                            <!-- Hidden input to send the comment ID -->
                            <input type="hidden" name="commentID" value="@reply.Id" />
                            <!-- Hidden input to send the product ID -->
                            @* <input type="hidden" name="productID" value="@product.Id" /> *@
                            <button type="submit" class="like-button " style="background:none; border:none; cursor:pointer;">
                                <i class="fa-solid fa-thumbs-up"></i>
                            </button>
                        </form>

                        <span id="dislike-count-@reply.Id">@reply.NumberOfDisLikes</span>

                        <!-- Form for Decreasing Like -->
                        <form asp-action="DecreaseLike" asp-controller="Product" method="post" style="display:inline;" class="dislike-form">
                            <!-- Hidden input to send the comment ID -->
                            <input type="hidden" name="commentID" value="@reply.Id" />
                            <!-- Hidden input to send the product ID -->
                            @* <input type="hidden" name="productID" value="@product.Id" /> *@
                            <button type="submit" class="dislike-button" style="background:none; border:none; cursor:pointer;">
                                <i class="fa-solid fa-thumbs-down"></i>
                            </button>
                        </form>
                    </small>


                </p>
            </div>
        </div>

        <!-- Phần chứa các bình luận con -->
        <div id="replies-@reply.Id" class="ms-5" style="display: none;"></div>
    </div>
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function toggleReplies(parentId) {
        var repliesContainer = $('#replies-' + parentId);
        var button = $('#toggleButton-' + parentId);

        if (repliesContainer.is(':visible')) {
            // Nếu đang hiển thị, ẩn bình luận con và đổi nút thành "Xem thêm | "
            repliesContainer.hide();
            button.text('Xem thêm');
        } else {
            // Nếu đang ẩn, tải bình luận con nếu chưa có và đổi nút thành "Ẩn bớt"
            if (repliesContainer.html().trim() === '') {
                $.ajax({
                    url: '/Product/GetReply',
                    type: 'GET',
                    data: { parentId: parentId },
                    success: function (data) {
                        repliesContainer.html(data).show();
                        button.text('Ẩn bớt');
                    },
                    error: function () {
                        alert('Không thể tải phản hồi. Vui lòng thử lại sau.');
                    }
                });
            } else {
                repliesContainer.show();
                button.text('Ẩn bớt');
            }
        }
    }
</script>
<script>
    @*  ajax tang like.dislike *@
        $(document).ready(function () {
            // Sự kiện khi submit form like
            $('.like-form2').on('submit', function (e) {
                e.preventDefault();
                const form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cập nhật số lượt like
                            $(`#like-count-${response.productId}`).text(response.newLikeCount);
                            toastr.success(response.message || 'Like Bình luận đã thành công!')
                        } else {
                            toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                    }
                });
            });

            // Sự kiện khi submit form dislike
            $('.dislike-form2').on('submit', function (e) {
                e.preventDefault();
                const form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cập nhật số lượt dislike
                            $(`#dislike-count-${response.productId}`).text(response.newDislikeCount);
                            toastr.success(response.message || 'DisLike Bình luận đã thành công!')
                        } else {
                            toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                    }
                });
            });
        });
    @*  ajax tang like.dislike *@

    @* ajax hien thi reply *@
        function toggleReplies(parentId) {
            var repliesContainer = $('#replies-' + parentId);
            var button = $('#toggleButton-' + parentId);
            var replyLink = $('#replyLink-' + parentId); // Nút Reply

            if (repliesContainer.is(':visible')) {
                // Nếu bình luận con đang hiển thị, ẩn và thay đổi văn bản nút thành "Xem thêm"
                repliesContainer.hide();
                button.text('Xem thêm');
                replyLink.show();  // Hiện lại nút Reply
            } else {
                // Nếu bình luận con đang ẩn, tải bình luận con nếu chưa có và đổi văn bản nút thành "Ẩn bớt"
                if (repliesContainer.html().trim() === '') {
                    $.ajax({
                        url: '/Product/GetReply',
                        type: 'GET',
                        data: { parentId: parentId },
                        success: function (data) {
                            repliesContainer.html(data).show();
                            button.text('Ẩn bớt');
                            replyLink.hide();  // Ẩn nút Reply khi có bình luận con
                        },
                        error: function () {
                            alert('Không thể tải phản hồi. Vui lòng thử lại sau.');
                        }
                    });
                } else {
                    repliesContainer.show();
                    button.text('Ẩn bớt');
                    replyLink.hide();  // Ẩn nút Reply khi có bình luận con
                }
            }
        }
    @*ajax hien thi reply *@

    @* scroll xuong createcomment *@
        function scrollToReplyForm(parentId) {
            // Cuộn xuống phần form nhập bình luận
            $('html, body').animate({
                scrollTop: $('#comment-form').offset().top
            }, 500);

            // Điền ParentId vào form
            $('input[name="ParentId"]').val(parentId);
        }
    @* scroll xuong createcomment *@

    @* DOM Doi mau nut like.dislike *@
        document.addEventListener('DOMContentLoaded', function () {
            // Lấy tất cả các form like và dislike
            const likeForms = document.querySelectorAll('.like-form');
            const dislikeForms = document.querySelectorAll('.dislike-form');

            likeForms.forEach(form => {
                form.addEventListener('submit', function (event) {
                    event.preventDefault(); // Ngăn form submit để xử lý màu sắc

                    const likeIcon = form.querySelector('.fa-thumbs-up');
                    if (likeIcon) {
                        likeIcon.style.color = 'green'; // Đổi màu nút like thành xanh
                    }

                    // Tìm form dislike liên quan
                    const dislikeForm = form.closest('form').nextElementSibling; // Tìm form kế tiếp nếu có
                    if (dislikeForm && dislikeForm.querySelector('.fa-thumbs-down')) {
                        const dislikeIcon = dislikeForm.querySelector('.fa-thumbs-down');
                        if (dislikeIcon) {
                            dislikeIcon.style.color = ''; // Đặt lại màu dislike về mặc định
                        }
                    }
                });
            });

            dislikeForms.forEach(form => {
                form.addEventListener('submit', function (event) {
                    event.preventDefault(); // Ngăn form submit để xử lý màu sắc

                    const dislikeIcon = form.querySelector('.fa-thumbs-down');
                    if (dislikeIcon) {
                        dislikeIcon.style.color = 'red'; // Đổi màu nút dislike thành đỏ
                    }

                    // Tìm form like liên quan
                    const likeForm = form.previousElementSibling.previousElementSibling; // Tìm form trước đó nếu có
                    if (likeForm && likeForm.querySelector('.fa-thumbs-up')) {
                        const likeIcon = likeForm.querySelector('.fa-thumbs-up');
                        if (likeIcon) {
                            likeIcon.style.color = ''; // Đặt lại màu like về mặc định
                        }
                    }
                });
            });
        });
    @* DOM Doi mau nut like.dislike *@

    @*  ajax tang like.dislike *@
        $(document).ready(function () {
            // Sự kiện khi submit form like
            $('.like-form').on('submit', function (e) {
                e.preventDefault();
                const form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cập nhật số lượt like
                            $(`#like-count-${response.commentId}`).text(response.newLikeCount);
                            toastr.success(response.message || 'Like Bình luận đã thành công!')
                        } else {
                            toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                    }
                });
            });

            // Sự kiện khi submit form dislike
            $('.dislike-form').on('submit', function (e) {
                e.preventDefault();
                const form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cập nhật số lượt dislike
                            $(`#dislike-count-${response.commentId}`).text(response.newDislikeCount);
                            toastr.success(response.message || 'DisLike Bình luận đã thành công!')
                        } else {
                            toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                    }
                });
            });
        });
    @*  ajax tang like.dislike *@

    @*  ajax hien thi comment moi *@
        $(document).ready(function () {
            // Xử lý khi gửi form bình luận
            $('#comment-form').submit(function (e) {
                e.preventDefault(); // Ngừng gửi form theo cách thông thường

                var formData = new FormData(this);

                $.ajax({
                    url: '@Url.Action("CreateComment", "Product")',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.success) {
                            // Xử lý khi bình luận thành công
                            var parentCommentId = $('#comment-form input[name="ParentId"]').val();
                            if (parentCommentId) {
                                var repliesContainer = $('#replies-' + parentCommentId);
                                if (repliesContainer.is(':hidden')) {
                                    repliesContainer.show();
                                }
                                repliesContainer.prepend(response.html);
                            } else {
                                $('#comments-section').prepend(response.html);
                            }
                            $('#comment-form')[0].reset();
    @* alert('Bình luận đã được gửi thành công!'); *@
                                toastr.success(response.message)
    @* // Gắn lại sự kiện like và dislike cho bình luận mới *@
                                bindLikeDislikeEvents();
                            bindLikeDislikeEvents2()
                        } else {
                            if (response.message) {
                                toastr.error(response.message);
                            } else {
                                toastr.error('Có lỗi xảy ra, vui lòng thử lại.');
                            }
                        }
                    },
                    error: function () {
                        toastr.error('Có lỗi xảy ra, vui lòng thử lại.');
                    }
                });
            });

    @*  // Hàm để gắn sự kiện like/dislike cho tất cả các bình luận *@
                function bindLikeDislikeEvents() {
                    // Xử lý khi submit form like (cho các bình luận cũ và mới)
                    $('.like-form').off('submit').on('submit', function (e) {
                        e.preventDefault();
                        const form = $(this);
                        $.ajax({
                            url: form.attr('action'),
                            type: form.attr('method'),
                            data: form.serialize(),
                            success: function (response) {
                                if (response.success) {
                                    // Cập nhật số lượt like
                                    $(`#like-count-${response.commentId}`).text(response.newLikeCount);
                                    toastr.success(response.message || 'Like Bình luận đã thành công!')
                                } else {

                                    toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                                }
                            },
                            error: function (xhr) {

                                toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                            }
                        });
                    });

                    // Xử lý khi submit form dislike (cho các bình luận cũ và mới)
                    $('.dislike-form').off('submit').on('submit', function (e) {
                        e.preventDefault();
                        const form = $(this);
                        $.ajax({
                            url: form.attr('action'),
                            type: form.attr('method'),
                            data: form.serialize(),
                            success: function (response) {
                                if (response.success) {
                                    // Cập nhật số lượt dislike
                                    $(`#dislike-count-${response.commentId}`).text(response.newDislikeCount);
                                    toastr.success(response.message || 'DisLike Bình luận đã thành công!')
                                } else {
                                    toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                                }
                            },
                            error: function (xhr) {
                                toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                            }
                        });
                    });
                }

    @*  // Hàm để gắn sự kiện đổi màu like/dislike cho các form *@
                function bindLikeDislikeEvents2() {
                    // Lấy tất cả các form like và dislike
                    const likeForms = document.querySelectorAll('.like-form');
                    const dislikeForms = document.querySelectorAll('.dislike-form');

                    // Gắn sự kiện cho các form like
                    likeForms.forEach(form => {
                        form.addEventListener('submit', function (event) {
                            event.preventDefault(); // Ngăn form submit để xử lý màu sắc
                            handleLikeDislikeSubmit(form, 'like');
                        });
                    });

                    // Gắn sự kiện cho các form dislike
                    dislikeForms.forEach(form => {
                        form.addEventListener('submit', function (event) {
                            event.preventDefault(); // Ngăn form submit để xử lý màu sắc
                            handleLikeDislikeSubmit(form, 'dislike');
                        });
                    });
                }

    @*  // Hàm xử lý submit đổi màu form like/dislike *@
                function handleLikeDislikeSubmit(form, type) {
                    const iconSelector = type === 'like' ? '.fa-thumbs-up' : '.fa-thumbs-down';
                    const icon = form.querySelector(iconSelector);

                    if (icon) {
                        // Thay đổi màu sắc dựa trên loại hành động (like/dislike)
                        if (type === 'like') {
                            icon.style.color = 'green'; // Đổi màu nút like thành xanh
                        } else {
                            icon.style.color = 'red'; // Đổi màu nút dislike thành đỏ
                        }
                    }

                    // Tìm form liên quan
                    const relatedFormSelector = type === 'like' ? 'nextElementSibling' : 'previousElementSibling.previousElementSibling';
                    const relatedForm = form.closest('form')[relatedFormSelector];

                    if (relatedForm && relatedForm.querySelector(type === 'like' ? '.fa-thumbs-down' : '.fa-thumbs-up')) {
                        const relatedIcon = relatedForm.querySelector(type === 'like' ? '.fa-thumbs-down' : '.fa-thumbs-up');
                        if (relatedIcon) {
                            relatedIcon.style.color = ''; // Đặt lại màu của form ngược lại về mặc định
                        }
                    }
                }

    @* // Gọi hàm gắn sự kiện like/dislike khi trang được tải *@
                bindLikeDislikeEvents();
            bindLikeDislikeEvents2()
        });
    @*  ajax hien thi comment moi *@
</script>