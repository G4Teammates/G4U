@* CreateProduct.cshtml *@

@using Client.Models.ProductDTO
@model CreateProductModel

@{
    ViewData["Title"] = "Create Product";
}

<h1>Create Product</h1>

@if (TempData["success"] != null)
{
    <div class="alert alert-success">
        @TempData["success"]
    </div>
}

@if (TempData["error"] != null)
{
    <div class="alert alert-danger">
        @TempData["error"]
    </div>
}

<form asp-action="CreateProduct" method="post" enctype="multipart/form-data" id="productForm">
    <div asp-validation-summary="ModelOnly"></div>

    <!-- Name -->
    <div class="form-group">
        <label asp-for="@Model.Name" class="control-label"></label>
        <input asp-for="@Model.Name" class="form-control" />
        <span asp-validation-for="@Model.Name" class="text-danger"></span>
    </div>

    <!-- Description -->
    <div class="form-group">
        <label asp-for="@Model.Description" class="control-label"></label>
        <textarea asp-for="@Model.Description" class="form-control"></textarea>
        <span asp-validation-for="@Model.Description" class="text-danger"></span>
    </div>

    <!-- Price -->
    <div class="form-group">
        <label asp-for="@Model.Price" class="control-label"></label>
        <input asp-for="@Model.Price" class="form-control" type="number" step="0.01" id="price" placeholder="Nhập giá trị VNĐ"/>
        <span asp-validation-for="@Model.Price" class="text-danger"></span>
    </div>

    <!-- Discount -->
    <div class="form-group">
        <label asp-for="@Model.Discount" class="control-label"></label>
        <input asp-for="@Model.Discount" class="form-control" type="number" id="discount" step="0.01" max="99.99" />
        <span asp-validation-for="@Model.Discount" class="text-danger"></span>
    </div>
    <p id="error-message" class="text-danger"></p>


    <!-- Categories -->
    <!-- Categories -->
    <div class="form-group">
        <label>Categories</label>
        <div id="categories-list">
            <!-- Các danh mục sẽ được thêm tại đây -->
        </div>
        <button type="button" class="btn btn-success" onclick="addCategory()">Add Category</button>
    </div>

    <!-- Platform -->
    <div class="form-group">
        <label asp-for="@Model.Platform" class="form-label"></label>
        <select asp-for="@Model.Platform" class="form-select" aria-label="Platform">
            <option value="0" selected>Unknown</option>
            <option value="1">Downloadable</option>
            <option value="2">HTML</option>
            <option value="3">WebGL</option>
            <option value="4">Window</option>
            <option value="5">Android</option>
            <option value="6">iOS</option>
            <option value="7">MacOS</option>
            <option value="8">Linux</option>
            <option value="9">Other</option>

        </select>
        <span asp-validation-for="Platform" class="text-danger"></span>
    </div>

    <!-- Status -->
    <div class="form-group mt-2">
        <label asp-for="@Model.Status" class="form-label"></label>
        <select asp-for="@Model.Status" class="form-select" aria-label="Status" disabled>
            <option value="0" selected>Inactive</option>
            <option value="1">Active</option>
            <option value="2">Block</option>
            <option value="3">Deleted</option>

        </select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>

    <!-- ImageFiles (Upload multiple images) -->
    <div class="form-group mt-2">
        <label class="control-label" asp-for="@Model.imageFiles" >Upload Images</label>
        <input type="file" name="imageFiles" multiple class="form-control" asp-for="@Model.imageFiles" accept="image/*" />
        <span asp-validation-for="@Model.imageFiles" class="text-danger"></span>
    </div>

@*     <!-- Username -->
    <div class="form-group">
        <label class="control-label" asp-for="@Model.Username">Username</label>
        <input type="text" name="username" class="form-control" asp-for="@Model.Username" />
        <span asp-validation-for="@Model.Username" class="text-danger"></span> <!-- Không cần validation cho trường này -->
    </div> *@

    <!-- Game File (Upload game file) -->
    <div class="form-group mt-2">
        <label class="control-label" asp-for="@Model.gameFile">Upload Game File</label>
        <input type="file" name="gameFile" multiple class="form-control" asp-for="@Model.gameFile" accept=".rar, .zip" />
        <span asp-validation-for="@Model.gameFile" class="text-danger"></span>
    </div>

    <!-- WinrarPassword -->
    <div class="form-group mt-2">
        <label class="control-label">Rar Password - Password for game file</label>
        <input asp-for="@Model.winrarPassword" class="form-control" type="text" placeholder="Password of file game...."/>
        <span asp-validation-for="@Model.winrarPassword" class="text-danger"></span>
    </div>

    <!-- Submit Button -->
    <div class="form-group mt-3 text-center">
        <input type="submit" value="Create" class="btn btn-danger w-50" id="submitBtn" />
    </div>
    <div class="form-group mt-3 text-center">
        <a href="@Url.Action("ProductsManager")" class="btn btn-primary w-50">Cancel</a>
    </div>
</form>

@section Scripts {
    
    @await Html.PartialAsync("_ValidationScriptsPartial")

}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const priceInput = document.getElementById('price');
        const discountInput = document.getElementById('discount');
        const errorMessage = document.getElementById('error-message');
        const productForm = document.getElementById('productForm');
        const submitBtn = document.getElementById('submitBtn');

        // Hàm kiểm tra và hiển thị lỗi
        function validateInputs() {
            const price = parseFloat(priceInput.value) || 0; // Giá trị của price
            const discount = parseFloat(discountInput.value) || 0; // Giá trị của discount

            // Nếu giá = 0 mà discount khác 0, hiển thị lỗi
            if (price === 0 && discount !== 0) {
                errorMessage.textContent = 'Không thể áp dụng giảm giá khi giá trị bằng 0.';
                discountInput.value = 0; // Reset discount về 0
                submitBtn.disabled = true; // Vô hiệu hóa nút submit
                return false;
            } else {
                errorMessage.textContent = ''; // Xóa thông báo lỗi
                submitBtn.disabled = false; // Bật nút submit
                return true;
            }
        }

        // Lắng nghe sự kiện khi giá trị thay đổi
        priceInput.addEventListener('input', validateInputs);
        discountInput.addEventListener('input', validateInputs);

        // Ngăn gửi form nếu đang có lỗi
        productForm.addEventListener('submit', function (event) {
            if (!validateInputs()) {
                event.preventDefault(); // Ngăn form gửi đi
            }
        });
    });


</script>
