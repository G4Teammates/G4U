@using Client.Models.ProductDTO

@{
    Layout = "_LayoutAdmin";
}

@model ProductViewModel

<div class="pt-3 pb-4">
    <span class="titleManager bg-success py-3 px-5 rounded-4 fw-bold text-white">Products Manager</span>
</div>

<!-- Nút mở sidebar -->
<button class="btn btn-primary mt-4" onclick="openSidebar()">Filter</button>

<!-- Sidebar cho bộ lọc -->
<div id="filterSidebar">
    <a href="javascript:void(0)" class="closebtn" onclick="closeSidebar()">&times;</a>

    <form asp-action="FilterProducts" asp-controller="Admin" method="post">
        <!-- Price Filter -->
        <div class="mb-4">
            <h5>Price</h5>
            <input type="text" class="form-range" name="minRange">
            <input type="text" class="form-range" name="maxRange">
        </div>

        <!-- Category Filter -->
        <div class="mb-4">
            <h5>Category</h5>
            <select class="form-select" name="category">
                @if (Model.CategoriesModel != null)
                {
                    foreach (var cate in Model.CategoriesModel)
                    {
                        <option value="@cate.Name">@cate.Name</option>
                    }
                }
                else
                {
                    <option disabled>Không có danh mục nào</option>
                }
            </select>
        </div>

        <!-- Platform Filter -->
        <div class="mb-4">
            <h5>Platform</h5>
            <select class="form-select" name="platform">
                @if (Model.Product != null)
                {
                    foreach (Client.Models.Enum.ProductEnum.PlatformType platform in Enum.GetValues(typeof(Client.Models.Enum.ProductEnum.PlatformType)))
                    {
                        <option value="@(platform)">@platform</option>
                    }
                }
                else
                {
                    <option disabled>Không có danh mục nào</option>
                }
            </select>
        </div>

        <!-- Discount Filter -->
        <div class="mb-4">
            <label for="discount" class="form-label">Discount</label>
            <select name="discount" class="form-select" aria-label="Type">
                <option value="True">True</option>
                <option value="False">False</option>
            </select>
        </div>

        <!-- Sold Filter -->
        <div class="mb-4">
            <label for="sold" class="form-label">Sort</label>
            <select name="sold" class="form-select" aria-label="Type">
                <option value="0">>0</option>
                <option value="100">>100</option>
                <option value="200">>200</option>
                <option value="500">>500</option>
                <option value="1000">>1000</option>
            </select>
        </div>

        <!-- Submit Button -->
        <button type="submit" class="btn btn-primary w-100">Apply Filters</button>
    </form>
</div>




<form class="form-group" asp-action="SortProducts" asp-controller="Admin" method="post">
    <label for="sort" class="form-label">Sort</label>
    <select name="sort" class="form-select" aria-label="Type">
        <option value="ascPrice">Giá tăng dần</option>
        <option value="descPrice">Giá giảm dần</option>
        <option value="ascView">View tăng dần</option>
        <option value="descView">View giảm dần</option>
        <option value="ascLike">Like tăng dần</option>
        <option value="descLike">Like giảm dần</option>
        <option value="ascSold">Lượt mua tăng dần</option>
        <option value="descSold">Lượt mua giảm dần</option>
    </select>
    <button type="submit" class="btn btn-primary mt-2">Sort</button>
</form>



<div class="container mt-4">
    <!-- Thanh tìm kiếm và nút Thêm -->
    <div class="d-flex justify-content-between mb-3">
        <form asp-action="SearchProduct" asp-controller="Admin" method="post">
            <input class="form-control" type="text" placeholder="Search by..." name="searchString" />
        </form>
        <div>   
            <button class="btn btn-success" data-toggle="modal" data-target="#modalProduct">+ Add</button>
        </div>
    </div>

    <!-- Bảng thông tin -->
    <div id="checkBoxBar" style="display:none">
        <div class="text-end m-2">
            @* <button class="btn btn-success mx-2 w-100">Public All</button> *@
            <a class="text-danger mx-2" href="" data-toggle="modal" data-target="#deleteProductModal">
                <i class="fas fa-trash"></i>
            </a>
        </div>
    </div>
    <table class="table table-bordered table-hover align-middle">
        <thead class="table-light">
            <tr>
                <th scope="col"><input type="checkbox" id="selectAll"></th>
                <th scope="col">Qr Code</th>
               @*  <th scope="col">Bar Code</th> *@

                <th scope="col">Name</th>
                <th scope="col">Description</th>

                <th scope="col">Price</th>
                <th scope="col">Sold</th>
                <th scope="col">Interactions</th>
                <th scope="col">Discount</th>
                <th scope="col">Platform</th>
                <th scope="col">Links</th>
                <th scope="col">Categories</th>
                <th scope="col">Status</th>

                <th scope="col">CreatedAt</th>
                <th scope="col">UpdatedAt</th>
                <th scope="col">UserName</th>

                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Product) // Giả sử 'Products' là danh sách các sản phẩm
            {
                <tr>
                    <td><input type="checkbox" class="product-checkbox"></td>
                    <td>
                        <img src="@product.QrCode" alt="QR Code" width="100" height="100" />
                    </td>
                   @*  <td>
                        <img src="@product.BarCode" alt="Bar Code" width="100" height="100" />
                    </td> *@
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td>@product.Price.ToString("C")</td>
                    <td>@product.Sold</td>
                    <td>
                        <div>Likes: @product.Interactions?.NumberOfLikes</div>
                        <div>Views: @product.Interactions?.NumberOfViews</div>
                    </td>
                    <td>@product.Discount %</td>
                    <td>@product.Platform</td>
                    <td>
                        @if (product.Links != null)

                        {
                            <ul>
                                @foreach (var link in product.Links)
                                {
                                    if (link.ProviderName == "Google Drive")
                                    {
                                        <a href="@link.Url">
                                            File game
                                        </a>
                                    }
                                    else
                                    {
                                        <img src="@link.Url" width="50px" height="50px"/>
                                    }                                  
                                }
                            </ul>
                        }

                    </td>
                    <td>
                        @if (product.Categories != null)

                        {
                            <ul>
                                @foreach (var category in product.Categories)
                                {
                                    <li>@category.CategoryName</li>
                                }
                            </ul>
                        }

                    </td>

                    <td>@product.Status</td>
                    <td>@product.CreatedAt.ToString("dd/MM/yyyy")</td>
                    <td>@product.UpdatedAt.ToString("dd/MM/yyyy")</td>
                    <td>@product.UserName</td>

                   

                    <td>
                        <a asp-action="UpdateProduct" asp-route-id="@product.Id" class="text-danger mx-2">
                            <i class="fa-regular fa-pen-to-square"></i>
                        </a>
                    </td>
                    <td>
                        @* <form asp-action="UsersDelete" >
                    <input type="submit" value="Delete" class="btn btn-danger" />
                    </form> *@
                        <a asp-action="DeleteProduct" asp-route-Id="@product.Id" class="text-danger mx-2"> <i class="fas fa-trash"></i></a>
                        @* <a asp-action="UsersDelete" asp-route-Id="@user.Id"> <i class="fas fa-trash"></i></a> *@
                    </td>

                </tr>
            }
            <!-- Thêm các dòng dữ liệu tương tự -->

        </tbody>
    </table>


    <!-- Phân trang -->
    @* <div class="d-flex justify-content-between mt-3">
    <div>Total: @(Model.pageCount)</div>
        <div>
            <select class="form-select form-select-sm w-auto d-inline-block">
                <option>20 records per page</option>
                <option>50 records per page</option>
                <option>100 records per page</option>
            </select>
            <nav aria-label="Page navigation example" class="d-inline-block">
                <ul class="pagination pagination-sm mb-0">
                    <li class="page-item disabled">
                        <a class="page-link" href="#">1 to 20</a>
                    </li>
                    <li class="page-item"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item"><a class="page-link" href="#">></a></li>
                </ul>
            </nav>
        </div>
    </div> *@
    @* <div>
        Trang @(Model.pageNumber) / @(Model.pageCount)
    </div>
    <div class="d-flex justify-content-center">
        <ul class="pagination">
            <li class="page-item @(Model.pageNumber == 1 ? "disabled": "")">
                <a class="page-link" asp-controller="Admin" asp-action="ProductsManager" asp-route-page="@(Model.pageNumber - 1)"> Previous </a>
            </li>
            @for (var pg = 1; pg <= Model.pageCount; pg++)
            {
                <li class="page-item @(pg == Model.pageNumber ? "active" :"")">
                    <a class="page-link" asp-controller="Admin" asp-action="ProductsManager" asp-route-page="@pg"> @pg </a>
                </li>
            }
            <li class="page-item @(Model.pageNumber == Model.pageCount ? "disabled": "")">
                <a class="page-link" asp-controller="Admin" asp-action="ProductsManager" asp-route-page="@(Model.pageNumber + 1)"> Next </a>
            </li>
        </ul>

    </div> *@

    <div class="d-flex justify-content-between mt-3">
        <div>Total: @(Model.totalItem) items</div>
        <div>
            <form method="get" asp-controller="Admin" asp-action="ProductsManager" class="d-inline">
                <select name="pageSize" class="form-select form-select-sm w-auto d-inline-block" onchange="this.form.submit()">
                    <option>Select records per page</option>
                    <option value="3">3 records per page</option>
                    <option value="5">5 records per page</option>
                    <option value="10">10 records per page</option>
                </select>
                <input type="hidden" name="page" value="1" />
            </form>

            <nav aria-label="Page navigation example" class="d-inline-block">
                <ul class="pagination pagination-sm mb-0">
                    <li class="page-item @(Model.pageNumber == 1 ? "disabled" : "")">
                        <a class="page-link" asp-controller="Admin" asp-action="ProductsManager" asp-route-page="@(Model.pageNumber - 1)" asp-route-pageSize="@(ViewContext.HttpContext.Request.Query["pageSize"])">
                            Previous
                        </a>
                    </li>
                    @for (var pg = 1; pg <= Model.pageCount; pg++)
                    {
                        <li class="page-item @(pg == Model.pageNumber ? "active" : "")">
                            <a class="page-link" asp-controller="Admin" asp-action="ProductsManager" asp-route-page="@pg" asp-route-pageSize="@(ViewContext.HttpContext.Request.Query["pageSize"])">
                                @pg
                            </a>
                        </li>
                    }
                    <li class="page-item @(Model.pageNumber == Model.pageCount ? "disabled" : "")">
                        <a class="page-link" asp-controller="Admin" asp-action="ProductsManager" asp-route-page="@(Model.pageNumber + 1)" asp-route-pageSize="@(ViewContext.HttpContext.Request.Query["pageSize"])">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>




</div>


















<div class="modal fade" id="modalProduct" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="container-fluid p-5">
                @await Html.PartialAsync("CreateProduct", Model.CreateProductModel)
            </div>
        </div>
    </div>
</div>











<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteProductModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this item? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>











<script src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js"></script>

<script>
    // Mở sidebar
    function openSidebar() {
        document.getElementById("filterSidebar").classList.add("open");
    }

    // Đóng sidebar
    function closeSidebar() {
        document.getElementById("filterSidebar").classList.remove("open");
    }


    function displayFileInfo() {
        const input = document.getElementById('fileInput');
        const file = input.files[0]; // Lấy file đầu tiên (vì người dùng có thể chọn nhiều file)
        if (file) {
            // Kiểm tra kích thước file (ví dụ 1GB = 1073741824 bytes)
            if (file.size > 1073741824) {
                alert('File quá lớn, hãy chọn file dưới 1 GB.');
                return;
            }

            // Hiển thị thông tin file
            const fileInfo = `
                            <strong>File Name:</strong> ${file.name} <br>
                            <strong>File Size:</strong> ${(file.size / 1024 / 1024).toFixed(2)} MB <br>
                            <strong>File Type:</strong> ${file.type}
                            <div class="m-2">
                                <label class="p-2 border border-1">
                                    <input type="radio" value="Windows" name="Platforms" /> Windows
                                </label>
                                <label class="p-2 border border-1">
                                    <input type="radio" value="MacOS" name="Platforms" /> MacOS
                                </label>
                                <label class="p-2 border border-1">
                                    <input type="radio" value="Linux" name="Platforms" /> Linux
                                </label>
                            </div>
                        `;
            document.getElementById('fileInfo').innerHTML = fileInfo;
        }
    }

    var simplemde = new SimpleMDE({
        element: document.getElementById("descriptionEditor"),
        toolbar: ["bold", "italic", "heading", "|", "quote", "unordered-list", "ordered-list", "|", "link", "image", "|", "preview", "side-by-side", "fullscreen", "guide"]
    });





    const priceRange = document.getElementById("priceRange");
    const priceValue = document.getElementById("priceValue");

    // Đặt giá trị mặc định cho hiển thị
    priceValue.textContent = `$${priceRange.value}`;

    // Cập nhật giá trị khi thanh trượt được kéo
    priceRange.addEventListener("input", function () {
        // Cập nhật giá trị hiển thị
        priceValue.textContent = `$${priceRange.value}`;

        // Đặt giá trị của thuộc tính value cho thanh trượt (đã tự động cập nhật nhưng vẫn có thể làm rõ)
        priceRange.setAttribute("value", priceRange.value);
    });

</script>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> <!-- Đảm bảo jQuery đã được tải -->

    <script type="text/javascript">
        function initializeCategoryScripts() {
            let categoryIndex = 0;

            // Hàm thêm danh mục
            function addCategory() {
                let html = `<div class="input-group mb-2">
                                        <input type="text" name="Categories[${categoryIndex}]" class="form-control" placeholder="Enter category" />
                                        <div class="input-group-append">
                                            <button type="button" class="btn btn-danger" onclick="removeCategory(this)">Remove</button>
                                        </div>
                                    </div>`;
                $('#categories-list').append(html);
                categoryIndex++;
            }

            // Gán hàm cho window để dùng được khi click
            window.addCategory = addCategory;

            // Hàm xóa danh mục
            function removeCategory(button) {
                $(button).closest('.input-group').remove();
            }

            // Gán hàm này vào window để có thể gọi khi bấm Remove
            window.removeCategory = removeCategory;
        }

        // Kiểm tra nếu partial view được tải qua Ajax và script này cần được kích hoạt sau khi nạp
        $(document).on('ajaxComplete', function () {
            initializeCategoryScripts(); // Khởi tạo script sau khi partial view được nạp qua Ajax
        });

        // Hoặc gọi trực tiếp nếu partial không được nạp qua Ajax
        $(document).ready(function () {
            initializeCategoryScripts();
        });
    </script>

}

