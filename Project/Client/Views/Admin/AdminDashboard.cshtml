@using Client.Models
@using System.Text.Json
@model AllModel

@{
    Layout = "_LayoutAdmin";
}

<div class="w-100">
    <div class="row">
        <div class="col-md-3 mb-4 m-auto">
            <a asp-controller="Admin" asp-action="UsersManager" class="text-white text-decoration-none">
                <div class="product-item" style="background-image: url('/Image/usermanager.jpeg'); background-size: cover; background-position: center;">
                    <div style="z-index:2;"><h3 class="text-center">Users Manager</h3></div>
                </div>
            </a>
        </div>
        <div class="col-md-3 mb-4 m-auto">
            <a asp-controller="Admin" asp-action="ProductsManager" class="text-white text-decoration-none">
                <div class="product-item" style="background-image: url('/Image/productmanager.jpeg'); background-size: cover; background-position: center;">
                    <div style="z-index:2;"><h3 class="text-center">Products Manager</h3></div>
                </div>
            </a>
        </div>
        <div class="col-md-3 mb-4 m-auto">
            <a asp-controller="Admin" asp-action="OrdersManager" class="text-white text-decoration-none">
                <div class="product-item" style="background-image: url('/Image/ordermanager.jpeg'); background-size: cover; background-position: center;">
                    <div style="z-index:2;"><h3 class="text-center">Orders Manager</h3></div>
                </div>
            </a>
        </div>
        <div class="col-md-3 mb-4 m-auto">
            <a asp-controller="Admin" asp-action="CategoriesManager" class="text-white text-decoration-none">
                <div class="product-item" style="background-image: url('/Image/avatar.jpeg'); background-size: cover; background-position: center;">
                    <div style="z-index:2;"><h3 class="text-center">Categories Manager</h3></div>
                </div>
            </a>
        </div>
    </div>
    <div class="row">
        @{
            var latestStat = Model.statis.LastOrDefault();
            var previousStat = Model.statis.ElementAtOrDefault(Model.statis.Count - 2);

            decimal CalculateGrowth(decimal? latestValue, decimal? previousValue)
            {
                if (latestValue != null && previousValue != null && previousValue > 0)
                {
                    return Math.Round(((latestValue.Value - previousValue.Value) / previousValue.Value) * 100, 3);
                }
                return 0;
            }

            string GetGrowthClass(decimal growth) => growth >= 0 ? "text-success" : "text-danger";
            string GetGrowthSymbol(decimal growth) => growth >= 0 ? "▲" : "▼";
        }

        <div class="col-6">
            <div class="card p-3">
                <div class="stat-card">
                    <div class="stat-header">
                        <h6>Total Revenue</h6>
                        <h3>$@latestStat.TotalWebsite.TotalRevenue</h3>
                        <span class="stat-growth @(GetGrowthClass(CalculateGrowth(latestStat.TotalWebsite.TotalRevenue, previousStat.TotalWebsite.TotalRevenue)))">
                            @(GetGrowthSymbol(CalculateGrowth(latestStat.TotalWebsite.TotalRevenue, previousStat.TotalWebsite.TotalRevenue)))
                            @CalculateGrowth(latestStat.TotalWebsite.TotalRevenue, previousStat.TotalWebsite.TotalRevenue)%
                        </span>
                    </div>
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div>

        <div class="col-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Product Statistics</h5>
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th scope="col">CreateAt</th>
                                <th scope="col">Revenue</th>
                                <th scope="col">Views</th>
                                <th scope="col">Products</th>
                                <th scope="col">Solds</th>
                                <th scope="col">Users</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in Model.statis)
                            {
                                <tr style="background-color:@(product.TotalWebsite?.TotalRevenue > 5000 ? "rgb(198, 239, 206)" : "rgb(211, 211, 211)")">
                                    <td>@product.CreateAt.ToString("dd/MM/yyyy")</td>
                                    <td>@product.TotalWebsite?.TotalRevenue</td>
                                    <td>@product.TotalWebsite?.TotalViews</td>
                                    <td>@product.TotalWebsite?.TotalProducts</td>
                                    <td>@product.TotalWebsite?.TotalSolds</td>
                                    <td>@product.TotalWebsite?.TotalUsers</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    @* <button class="btn btn-outline-primary">Details</button> *@
                </div>
            </div>
        </div>
        <!-- Views Chart -->
        <div class="col-6">
            <div class="card p-3">
                <div class="stat-card">
                    <h6>Total Views</h6>
                    <h3>@latestStat.TotalWebsite.TotalViews</h3>
                    <span class="stat-growth @(GetGrowthClass(CalculateGrowth(latestStat.TotalWebsite.TotalViews, previousStat.TotalWebsite.TotalViews)))">
                        @(GetGrowthSymbol(CalculateGrowth(latestStat.TotalWebsite.TotalViews, previousStat.TotalWebsite.TotalViews)))
                        @CalculateGrowth(latestStat.TotalWebsite.TotalViews, previousStat.TotalWebsite.TotalViews)%
                    </span>
                    <canvas id="viewsChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Products Chart -->
        <div class="col-6">
            <div class="card p-3">
                <div class="stat-card">
                    <h6>Total Products</h6>
                    <h3>@latestStat.TotalWebsite.TotalProducts</h3>
                    <span class="stat-growth @(GetGrowthClass(CalculateGrowth(latestStat.TotalWebsite.TotalProducts, previousStat.TotalWebsite.TotalProducts)))">
                        @(GetGrowthSymbol(CalculateGrowth(latestStat.TotalWebsite.TotalProducts, previousStat.TotalWebsite.TotalProducts)))
                        @CalculateGrowth(latestStat.TotalWebsite.TotalProducts, previousStat.TotalWebsite.TotalProducts)%
                    </span>
                    <canvas id="productsChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Solds Chart -->
        <div class="col-6">
            <div class="card p-3">
                <div class="stat-card">
                    <h6>Total Solds</h6>
                    <h3>@latestStat.TotalWebsite.TotalSolds</h3>
                    <span class="stat-growth @(GetGrowthClass(CalculateGrowth(latestStat.TotalWebsite.TotalSolds, previousStat.TotalWebsite.TotalSolds)))">
                        @(GetGrowthSymbol(CalculateGrowth(latestStat.TotalWebsite.TotalSolds, previousStat.TotalWebsite.TotalSolds)))
                        @CalculateGrowth(latestStat.TotalWebsite.TotalSolds, previousStat.TotalWebsite.TotalSolds)%
                    </span>
                    <canvas id="soldsChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Users Chart -->
        <div class="col-6">
            <div class="card p-3">
                <div class="stat-card">
                    <h6>Total Users</h6>
                    <h3>@latestStat.TotalWebsite.TotalUsers</h3>
                    <span class="stat-growth @(GetGrowthClass(CalculateGrowth(latestStat.TotalWebsite.TotalUsers, previousStat.TotalWebsite.TotalUsers)))">
                        @(GetGrowthSymbol(CalculateGrowth(latestStat.TotalWebsite.TotalUsers, previousStat.TotalWebsite.TotalUsers)))
                        @CalculateGrowth(latestStat.TotalWebsite.TotalUsers, previousStat.TotalWebsite.TotalUsers)%
                    </span>
                    <canvas id="usersChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>

    // Dữ liệu cho từng biểu đồ
    var labels = @Html.Raw(JsonSerializer.Serialize(Model.statis.Select(x => x.CreateAt.ToString("dd MMMM"))));

    var revenueData = @Html.Raw(JsonSerializer.Serialize(Model.statis.Select(x => x.TotalWebsite.TotalRevenue)));
    var viewsData = @Html.Raw(JsonSerializer.Serialize(Model.statis.Select(x => x.TotalWebsite.TotalViews)));
    var productsData = @Html.Raw(JsonSerializer.Serialize(Model.statis.Select(x => x.TotalWebsite.TotalProducts)));
    var soldsData = @Html.Raw(JsonSerializer.Serialize(Model.statis.Select(x => x.TotalWebsite.TotalSolds)));
    var usersData = @Html.Raw(JsonSerializer.Serialize(Model.statis.Select(x => x.TotalWebsite.TotalUsers)));

    // Tạo hàm để tạo biểu đồ
    function createChart(ctx, label, data, backgroundColor, borderColor) {
        return new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: label,
                    data: data,
                    backgroundColor: backgroundColor,
                    borderColor: borderColor,
                    fill: true,
                    tension: 0.4,
                    pointBackgroundColor: borderColor,
                    pointBorderColor: borderColor,
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: false
                    }
                },
                plugins: {
                    legend: {
                        display: true
                    }
                }
            }
        });
    }

    // Khởi tạo từng biểu đồ với id tương ứng
    createChart(document.getElementById('revenueChart').getContext('2d'), 'Revenue', revenueData, 'rgba(85, 85, 255, 0.1)', '#5555ff');
    createChart(document.getElementById('viewsChart').getContext('2d'), 'Views', viewsData, 'rgba(255, 99, 132, 0.1)', '#ff6384');
    createChart(document.getElementById('productsChart').getContext('2d'), 'Products', productsData, 'rgba(75, 192, 192, 0.1)', '#4bc0c0');
    createChart(document.getElementById('soldsChart').getContext('2d'), 'Solds', soldsData, 'rgba(255, 205, 86, 0.1)', '#ffcd56');
    createChart(document.getElementById('usersChart').getContext('2d'), 'Users', usersData, 'rgba(153, 102, 255, 0.1)', '#9966ff');
</script>




@* <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Information Template</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>


        .table-bordered {
            border: 2px solid #90EE90; /* Xanh lá nhạt */
        }

            .table-bordered th, .table-bordered td {
                border: 1px solid #90EE90; /* Xanh lá nhạt */
            }

        .custom-nav-item {
            border-bottom: 2px solid #0f1113; /* Màu xanh dương đậm hơn */
            padding-bottom: 10px; /* Khoảng cách dưới chữ */
        }

            .custom-nav-item a {
                margin-top: 2px; /* Khoảng cách trên chữ */
            }


        /* Tạo hiệu ứng hover cho sản phẩm */
        .product-item {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .product-item:hover {
                transform: translateY(-20px); /* Di chuyển sản phẩm lên khi hover */
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Thêm bóng đổ */
            }

            .product-item a {
                color: white;
                text-decoration: none;
            }

    </style>
</head>
<body>

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-3 bg-light p-3">
                <div class="text-center mb-4 logo">
                    <a asp-controller="Home" asp-action="Index">
                        <img style="max-width: 150px;" src="~/Image/logo.png">
                    </a>
                </div>

                <div class="d-flex align-items-center mb-3">
                    <img src="~/image/history-game-1.jpg" class="rounded me-3" alt="Avatar" style="width:70px; height70px;" />
                    <div>
                        <h5 class="mb-0">tuandeptrai1011</h5>
                        <p class="mb-0 text-muted">tuandeptrai@gmail.com<br>10/11/2004</p>
                    </div>
                </div>

                <div class="d-grid mb-4">
                    <button class="btn btn-success fw-bold" type="button">
                        <i class="fas fa-edit me-2"></i>Edit Profile
                    </button>
                </div>

                <ul class="nav flex-column nav-pills">
                    <li class="custom-nav-item">
                        <a class="nav-link text-black fw-bold" href="#">
                            <i class="fas fa-user"></i> User Manager
                        </a>
                    </li>
                    <li class="custom-nav-item">
                        <a class="nav-link text-black fw-bold" href="#">
                            <i class="fas fa-info-circle"></i> User Manager
                        </a>
                    </li>
                </ul>
            </div>

            <div class="col-md-9 p-4">
                <div class="row">
                    <!-- Sản phẩm 1 -->
                    <div class="col-md-4 mb-4">
                        <div class="product-item d-flex align-items-center justify-content-center p-3 text-white" style="height: 200px; background-image: url('/image/history-game-1.jpg'); background-size: cover; background-position: center;">
                            <a href="#">
                                <h3 class="text-center">Product 1</h3>
                            </a>
                        </div>
                    </div>

                    <!-- Sản phẩm 2 -->
                    <div class="col-md-4 mb-4">
                        <div class="product-item d-flex align-items-center justify-content-center p-3 text-white" style="height: 200px; background-image: url('/image/history-game-1.jpg'); background-size: cover; background-position: center;">
                            <a href="#">
                                <h3 class="text-center">Product 2</h3>
                            </a>
                        </div>
                    </div>

                    <!-- Sản phẩm 3 -->
                    <div class="col-md-4 mb-4">
                        <div class="product-item d-flex align-items-center justify-content-center p-3 text-white" style="height: 200px; background-image: url('/image/history-game-1.jpg'); background-size: cover; background-position: center;">
                            <a href="#">
                                <h3 class="text-center">Product 3</h3>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html> *@

