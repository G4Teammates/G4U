@model Client.Models.ProductDTO.UpdateProductModel
@{
    ViewData["Title"] = "Update Product";
}
@{
    Layout = "_LayoutAdmin";
}
<h2>Update Product</h2>

<form asp-action="UpdateProduct" method="post" enctype="multipart/form-data">
    <input type="hidden" name="_method" value="PUT" /> <!-- Giả lập PUT method -->

    <div class="form-group">
        <label for="id">Product ID</label>
        <input type="text" class="form-control" asp-for="Id" readonly />
    </div>

    <div class="form-group">
        <label for="name">Product Name</label>
        <input type="text" class="form-control" asp-for="Name" required />
    </div>

    <div class="form-group">
        <label for="description">Description</label>
        <textarea class="form-control" asp-for="Description" rows="4" required></textarea>
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <input type="number" class="form-control" asp-for="Price" required />
    </div>

    <div class="form-group">
        <label for="sold">Sold</label>
        <input type="number" class="form-control" asp-for="Sold" required />
    </div>

    <div class="form-group">
        <label for="numOfView">Number of Views</label>
        <input type="number" class="form-control" asp-for="Interactions.NumberOfViews" required />
    </div>

    <div class="form-group">
        <label for="numOfLike">Number of Likes</label>
        <input type="number" class="form-control" asp-for="Interactions.NumberOfLikes" required />
    </div>

    <div class="form-group">
        <label for="discount">Discount (%)</label>
        <input type="number" class="form-control" asp-for="Discount" step="0.01" required />
    </div>

    <div class="form-group">

        <label for="categories">Categories</label>
        @if (Model.Categories != null && Model.Categories.Any())
        {
            <select asp-for="Categories" asp-items="new SelectList(Model.Categories)"></select>
        }
        else
        {
            <p>No categories available</p>
        }
    </div>

    <div class="form-group">
        <label for="platform">Platform</label>
        @foreach (Client.Models.Enum.ProductEnum.PlatformType platform in Enum.GetValues(typeof(Client.Models.Enum.ProductEnum.PlatformType)))
        {
            <div class="form-check">
                <input type="radio" class="form-check-input" id="platform_@(platform.ToString())" name="Platform" value="@(platform)" @(platform == Model.Platform ? "checked" : "") />
                <label class="form-check-label" for="platform_@(platform.ToString())">@platform</label>
            </div>
        }
    </div>

    <div class="form-group">
        <label for="status">Status</label>
        @foreach (Client.Models.Enum.ProductEnum.ProductStatus status in Enum.GetValues(typeof(Client.Models.Enum.ProductEnum.ProductStatus)))
        {
            <div class="form-check">
                <input type="radio" class="form-check-input" id="status_@(status.ToString())" name="Status" value="@(status)" @(status == Model.Status ? "checked" : "") />
                <label class="form-check-label" for="status_@(status.ToString())">@status</label>
            </div>
        }
    </div>

    <div class="form-group">
        <label for="createAt">Created At</label>
        <input type="datetime-local" class="form-control" asp-for="CreatedAt" required />
    </div>

    <div class="form-group">
        <label for="imageFiles">Upload Images</label>
        <input type="file" class="form-control" name="imageFiles" multiple />
    </div>

    <div class="form-group">
        <label for="gameFile">Upload Game File</label>
        <input type="file" class="form-control" name="request.gameFile" />
    </div>

    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" class="form-control" asp-for="UserName" readonly />
    </div>

    <button type="submit" class="btn btn-primary">Update Product</button>
    <a asp-action="ProductsManager" class="btn btn-secondary">Back To List</a>
</form>

