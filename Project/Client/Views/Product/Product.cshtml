@using Client.Models.ProductDTO
@model ProductViewModel
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@600&display=swap" rel="stylesheet">


<div class="container-fluid mt-5" style="min-height:1100px;">
    <section class="modern-heading ms-3">
        <h1 style="font-family: 'Poppins', sans-serif; text-transform: uppercase; text-align: center; margin: 0;">
            Other Product
        </h1>
    </section>

    <div class="row mt-2">
        <div class="col-md-3">
            <!-- Tăng độ rộng của cột chứa -->
            <div class="filter-container m-3 p-3 shadow-sm rounded">
                <h4 class="mt-3 text-center">Filters</h4>
                <hr class="mb-4">
                <!-- -------------------------------------------------------------------------------------------------------------------------------------------------- -->
                <form asp-action="FilterProducts" asp-controller="Product" method="post">
                    <!-- Price Filter -->
                    <div class="filter-section mb-4">
                        <h5 class="filter-title">Price</h5>
                        <div class="d-flex gap-2">
                            <input type="number" class="form-control price-input" name="minRange" placeholder="Min price" min="0" oninput="validatePrice(this)">
                            <input type="number" class="form-control price-input" name="maxRange" placeholder="Max price" min="0" oninput="validatePrice(this)">
                        </div>
                        <div id="priceError" style="color: red; display: none;">Price cannot be less than 0.</div>
                    </div>

                    <!-- Category Filter -->
                    <div class="filter-section mb-4">
                        <h5 class="filter-title">Category</h5>
                        <select class="form-select" name="category">
                            @if (Model.CategoriesModel != null)
                            {
                                foreach (var cate in Model.CategoriesModel)
                                {
                                    <option value="@cate.Name">@cate.Name</option>
                                }
                            }
                            else
                            {
                                <option disabled>Không có danh mục nào</option>
                            }
                        </select>
                    </div>

                    <!-- Platform Filter -->
                    <div class="filter-section mb-4">
                        <h5 class="filter-title">Platform</h5>
                        <select class="form-select" name="platform">
                            @if (Model.Product != null)
                            {
                                foreach (Client.Models.Enum.ProductEnum.PlatformType platform in Enum.GetValues(typeof(Client.Models.Enum.ProductEnum.PlatformType)))
                                {
                                    <option value="@(platform)">@platform</option>
                                }
                            }
                            else
                            {
                                <option disabled>Không có danh mục nào</option>
                            }
                        </select>
                    </div>

                    <!-- Discount Filter -->
                    <div class="filter-section mb-4">
                        <h5 class="filter-title">Discount</h5>
                        <select name="discount" class="form-select">
                            <option value="True">True</option>
                            <option value="False">False</option>
                        </select>
                    </div>

                    <!-- Sold Filter -->
                    <div class="filter-section mb-4">
                        <h5 class="filter-title">Sold</h5>
                        <select name="sold" class="form-select" aria-label="Type">
                            <option value="0">>0</option>
                            <option value="100">>100</option>
                            <option value="200">>200</option>
                            <option value="500">>500</option>
                            <option value="1000">>1000</option>
                        </select>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="btn btn-primary w-100">Apply Filters</button>
                </form>
            </div>
        </div>
        <div class="col-md-9 mt-2">
            <div class="d-flex align-items-center justify-content-center sort-container">
                <!-- Sort -->
                <form class="col-md-5 d-inline-flex align-items-center ms-2" asp-action="SortProducts" asp-controller="Product" method="post">
                    <select name="sort" class="form-select me-2 w-75 sort-select">
                        <option value="ascPrice" class="sort-option">Price Ascending</option>
                        <option value="descPrice" class="sort-option">Price Descending</option>
                        <option value="ascView" class="sort-option">View Ascending</option>
                        <option value="descView" class="sort-option">View Descending</option>
                        <option value="ascLike" class="sort-option">Like Ascending</option>
                        <option value="descLike" class="sort-option">Like Descending</option>
                        <option value="ascSold" class="sort-option">Purchase Count Ascending</option>
                        <option value="descSold" class="sort-option">Purchase Count Descending</option>
                    </select>
                    <button type="submit" class="btn btn-primary sort-btn">
                        Sort
                    </button>
                </form>

                <!-- Phần Bản ghi và Nút Free nằm cùng một hàng và sát bên phải -->
                <div class="d-flex align-items-center justify-content-end col-md-5 ms-auto">
                    <!-- Bản ghi -->
                    <form method="get" asp-controller="Product" asp-action="Product" class="col-md-2 col-4 d-inline ms-2 mb-2">
                        <div class="dropdown">
                            <a href="#" type="button" class="d-flex align-items-center justify-content-around dropdown-toggle text-white" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fa-regular fa-rectangle-list"></i>
                            </a>
                            <ul class="dropdown-menu p-0">
                                <li><button class="dropdown-item" type="button" onclick="document.querySelector('[name=\'pageSize\']').value='3'; this.form.submit()">3 records per page</button></li>
                                <li><button class="dropdown-item" type="button" onclick="document.querySelector('[name=\'pageSize\']').value='5'; this.form.submit()">5 records per page</button></li>
                                <li><button class="dropdown-item" type="button" onclick="document.querySelector('[name=\'pageSize\']').value='10'; this.form.submit()">10 records per page</button></li>
                            </ul>
                            <input type="hidden" name="pageSize" value="" />
                            <input type="hidden" name="page" value="1" />
                        </div>
                    </form>

                    <!-- Nút Free -->
                </div>
            </div>





            
            
            <div class=" me-1">
                <div class="d-flex flex-wrap">
                    @if (Model.Product != null)
                    {
                        foreach (var product in Model.Product)
                        {
                            <div class="col-12 col-sm-12 col-md-3 card_other mt-4" style="width: 14rem; height:300px;">
                                @if (product.Links != null)
                                {
                                    string firstImageUrl = null; // Biến để lưu URL hình ảnh đầu tiên

                                    foreach (var link in product.Links) // Lặp qua từng đối tượng LinkModel
                                    {
                                        if (link.Url.Contains("cloudinary"))
                                        {
                                            firstImageUrl = link.Url; // Lưu URL hình ảnh đầu tiên
                                            break; // Thoát khỏi vòng lặp khi đã tìm thấy
                                        }
                                    }

                                    // Hiển thị hình ảnh đầu tiên nếu có
                                    if (firstImageUrl != null)
                                    {
                                        <img src="@firstImageUrl" alt="Cloudinary Image" />
                                    }


                                }
                                <div class="info_other">
                                    <h4>@product.Name</h4>
                                    <p>
                                        @(product.Description.Length > 100
                                            ? product.Description.Substring(0, 100) + "..."
                                            : product.Description)
                                    </p>
                                    <div class="row d-flex align-items-center justify-content-between">
                                        <a asp-controller="Product" asp-action="ProductDetail" asp-route-Id="@product.Id" class="ms-2 text-center col-md-6 btn_orther">Read More</a>
                                        <div class="col-md-4"></div>
                                        @* Day la trai tym ne *@
                                        <div title="Wishlist" class="col-md-1 heart-container">
                                            <form id="wishlistForm" method="post">
                                                <input type="hidden" name="ProductId" id="ProductId" value="@product.Id" />
                                                <input type="hidden" name="ProductName" id="ProductName" value="@product.Name" />
                                                <input type="hidden" name="ProductPrice" id="ProductPrice" value="@product.Price" />

                                                @{
                                                    string secondImageUrl2 = null;
                                                    int imageCount2 = 0;
                                                }
                                                @foreach (var link in product.Links)
                                                {
                                                    if (link.Url.Contains("cloudinary"))
                                                    {
                                                        imageCount2++;
                                                        if (imageCount2 == 2)
                                                        {
                                                            secondImageUrl2 = link.Url;
                                                            break;
                                                        }
                                                    }
                                                }
                                                <input type="hidden" name="ProductImage" id="ProductImage" value="@secondImageUrl2" />

                                                <!-- Checkbox hidden -->
                                                <input type="checkbox" id="wishlistCheckbox" class="checkbox" onclick="addToWishList('@product.Id', '@product.Name', '@product.Price', '@secondImageUrl2')" />

                                                <!-- Icon trái tim -->
                                                <div class="svg-container">
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="svg-outline" viewBox="0 0 24 24">
                                                        <path d="M17.5,1.917a6.4,6.4,0,0,0-5.5,3.3,6.4,6.4,0,0,0-5.5-3.3A6.8,6.8,0,0,0,0,8.967c0,4.547,4.786,9.513,8.8,12.88a4.974,4.974,0,0,0,6.4,0C19.214,18.48,24,13.514,24,8.967A6.8,6.8,0,0,0,17.5,1.917Zm-3.585,18.4a2.973,2.973,0,0,1-3.83,0C4.947,16.006,2,11.87,2,8.967a4.8,4.8,0,0,1,4.5-5.05A4.8,4.8,0,0,1,11,8.967a1,1,0,0,0,2,0,4.8,4.8,0,0,1,4.5-5.05A4.8,4.8,0,0,1,22,8.967C22,11.87,19.053,16.006,13.915,20.313Z"></path>
                                                    </svg>
                                                    <svg xmlns="http://www.w3.org/2000/svg" class="svg-filled" viewBox="0 0 24 24">
                                                        <path d="M17.5,1.917a6.4,6.4,0,0,0-5.5,3.3,6.4,6.4,0,0,0-5.5-3.3A6.8,6.8,0,0,0,0,8.967c0,4.547,4.786,9.513,8.8,12.88a4.974,4.974,0,0,0,6.4,0C19.214,18.48,24,13.514,24,8.967A6.8,6.8,0,0,0,17.5,1.917Z"></path>
                                                    </svg>
                                                    <svg xmlns="http://www.w3.org/2000/svg" height="100" width="100" class="svg-celebrate">
                                                        <polygon points="10,10 20,20"></polygon>
                                                        <polygon points="10,50 20,50"></polygon>
                                                        <polygon points="20,80 30,70"></polygon>
                                                        <polygon points="90,10 80,20"></polygon>
                                                        <polygon points="90,50 80,50"></polygon>
                                                        <polygon points="80,80 70,70"></polygon>
                                                    </svg>
                                                </div>
                                            </form>
                                        </div>
                                        
                                    </div>
                                    

                                </div>
                                <!-- Thêm phần số lượt view -->
                                <div class="view-count">
                                    <i class="fa-solid fa-eye" style="color:black;  width:20px;height:20px;"></i>
                                    <span style="color:black;">@product.Interactions.NumberOfViews</span>
                                </div>

                                <div class="like-dislike-container">
                                    <!-- Like và Dislike -->
                                    <form asp-action="IncreaseLikeProduct" asp-controller="Product" method="post" style="display:inline;">
                                        <input type="hidden" name="productID" value="@product.Id" />
                                        <span id="like-count-@product.Id" class="like-count" style="color:black;">@product.Interactions.NumberOfLikes</span>
                                        <i class="fa-solid fa-thumbs-up like-icon" style="color:black; width:20px;height:20px;"></i>
                                    </form>

                                    <form asp-action="DecreaseLikeProduct" asp-controller="Product" method="post" style="display:inline;">
                                        <input type="hidden" name="productID" value="@product.Id" />
                                        <span id="dislike-count-@product.Id" class="dislike-count" style="color:black;">@product.Interactions.NumberOfDisLikes</span>
                                        <i class="fa-solid fa-thumbs-down dislike-icon" style="color:black; width:20px;height:20px;"></i>
                                    </form>
                                </div>
                            </div>
                        }
                    }

                    
                    
@*                     <div class=" card cardgamemonth m-1" style="width: 12rem; height:230px;">
                        <img src="~/image/game.jpg" class="card-img-top" alt="..." />
                        <div class="card-body">
                            <h5 style="font-size:15px;">Trick Tactics - Card Adventure Game</h5>
                            <p class="text-end">109.000 <sup>đ</sup></p>
                        </div>
                    </div> *@
                </div>
            </div>
        </div>
    </div>
</div>

<div class="d-flex justify-content-between" style="margin-top:3vw;">
    <div style="font-size: 1em; font-weight: bold; color: #00A97F; display: flex; align-items: center; justify-content: center; padding: 15px 30px; background-color: transparent; border: 2px solid #00A97F; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 169, 127, 0.4), 0 0 15px rgba(0, 169, 127, 0.3); position: relative; text-align: center; transition: all 0.3s;">
        <i class="fas fa-rocket" style="margin-right: 15px; color: #00A97F;"></i>
        Total: <span style="color: #00A97F; padding-left: 5px; padding-right: 5px;">@(Model.totalItem)</span> items
        <div style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(135deg, #00A97F, #800080); border-radius: 8px; opacity: 0.2; z-index: -1;"></div>
    </div>


    <div>
        <nav aria-label="Page navigation example" class="d-inline-block">
            <ul class="pagination pagination-sm mb-0">
                <!-- Previous Button -->
                <li class="page-item @(Model.pageNumber == 1 ? "disabled" : "")">
                    <a class="page-link sci-fi-btn" asp-controller="Product" asp-action="Product" asp-route-page="@(Model.pageNumber - 1)" asp-route-pageSize="@(ViewContext.HttpContext.Request.Query["pageSize"])">
                        Previous
                    </a>
                </li>
                @for (var pg = 1; pg <= Model.pageCount; pg++)
                {
                    <li class="page-item @(pg == Model.pageNumber ? "active" : "")">
                        <a class="page-link sci-fi-btn" asp-controller="Product" asp-action="Product" asp-route-page="@pg" asp-route-pageSize="@(ViewContext.HttpContext.Request.Query["pageSize"])">
                            @pg
                        </a>
                    </li>
                }
                <!-- Next Button -->
                <li class="page-item @(Model.pageNumber == Model.pageCount ? "disabled" : "")">
                    <a class="page-link sci-fi-btn" asp-controller="Product" asp-action="Product" asp-route-page="@(Model.pageNumber + 1)" asp-route-pageSize="@(ViewContext.HttpContext.Request.Query["pageSize"])">
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    </div>


</div>


@* Thông báo lỗi nhập giá dưới 0 *@
<script>
    function validatePrice(input) {
        const errorDiv = document.getElementById("priceError");
        if (input.value < 0) {
            errorDiv.style.display = "block";
        } else {
            errorDiv.style.display = "none";
        }
    }
</script>
<script>
    function addToWishList(productId, productName, productPrice, productImage) {
        // Cập nhật các giá trị input ẩn với thông tin của sản phẩm hiện tại
        document.getElementById('ProductId').value = productId;
        document.getElementById('ProductName').value = productName;
        document.getElementById('ProductPrice').value = productPrice;
        document.getElementById('ProductImage').value = productImage;

        // Tạo FormData và gửi request
        const formData = new FormData(document.getElementById('wishlistForm'));

        fetch('@Url.Action("AddWishList", "Admin")', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(response => {
                if (response.success) {
                    toastr.success(response.message || 'Thêm vào WishList  đã thành công!')
                } else {
                    toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                    document.getElementById('wishlistCheckbox').checked = false;
                }
            })
            .catch(error => {
                alert("Có lỗi xảy ra: " + error.message);
                document.getElementById('wishlistCheckbox').checked = false;
            });
    }
</script>


