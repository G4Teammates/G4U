@using Client.Models.ProductDTO
@model ProductViewModel

<style>
    /* CSS như cũ */
    #anh-bia img {
        width: 100%;
        height: 500px;
        object-fit: cover;
        border-radius: 20px;
    }

    .product-details {
        margin-top: 20px;
    }

    .product-detail-item {
        margin-bottom: 12px;
        font-size: 16px;
        display: flex;
        align-items: center;
    }

        .product-detail-item i {
            font-size: 18px; /* Điều chỉnh kích thước biểu tượng */
            color: #00A97F;
            width: 10px;
            height: 10px;
        }

        .product-detail-item strong {
            font-weight: bold;
        }

        .product-detail-item .col {
            font-weight: normal;
            display: flex;
            align-items: center;
        }


    /*Comment*/
    .comment {
        margin: 5px 0;
    }

    .comment-body {
        border: 1px solid #ccc; /* Border bao quanh cả username và content */
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 5px; /* Khoảng cách phía dưới */
    }

    .comment-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 5px; /* Giảm khoảng cách giữa header và content */
    }

    .comment-content {
        margin: 0; /* Giảm khoảng cách phía trên và dưới của content */
    }

    .comment-footer {
        display: flex;
        justify-content: flex-end;
    }

        .comment-footer .likes {
            margin-left: auto;
        }

    .created-at {
        font-size: 0.9em;
        color: gray;
    }

    .product-price-container {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    /* Enhanced Discount Section */
    .discount-section {
        display: flex;
        background: linear-gradient(135deg, #198754, #1f9b6c); /* Subtle gradient for depth */
        padding: 10px 15px;
        border: 2px solid #146c43; /* Darker green for border */
        border-radius: 8px;
        color: white;
        font-weight: bold;
        font-size: 22px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Soft shadow for depth */
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .discount-rate {
        font-size: 26px;
        margin-right: 15px;
    }

    .price-section {
        display: flex;
        flex-direction: column;
    }

    .original-price {
        text-decoration: line-through;
        color: #b0b0b0;
        font-size: 16px;
    }

    .discounted-price {
        color: white;
        font-size: 20px;
        font-weight: bold;
    }

    /* Discount Section Hover Effect */
    .discount-section:hover {
        transform: scale(1.05);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15); /* More shadow on hover */
    }

    /*Cai này là hover vào hinh ảnh sẽ zoom len ne*/
    .col-md-4.mb-3,
    .col-md-8.mb-3 .col-md-6 {
        overflow: hidden; /* Ẩn phần ảnh vượt quá giới hạn */
    }

    .img-fluid {
        transition: transform 1s ease;
    }

        .img-fluid:hover {
            transform: scale(1.2); /* Zoom nhẹ khi hover */
 
        }


    /*Xem them vơi reply nha*/
    .link-action {
        cursor: pointer;
    }

        .link-action:hover {
            color: #00A97F; /* Màu khi hover */
            background-color: #f0f0f0; /* Màu nền khi hover */
        }

</style>

<div class="container mt-4">
    <!-- Ảnh bìa -->
    <div class="row">
        <div class="col-12">
            <div id="anh-bia">
                @if (Model.Prod != null )
                {
                    var Prod = Model.Prod;
                    var secondImageUrl = Prod.Links?
                    .Where(link => link.Url.Contains("cloudinary"))
                    .Skip(1) // Bỏ qua hình ảnh đầu tiên
                    .FirstOrDefault()?.Url; // Lấy hình ảnh thứ hai

                    if (!string.IsNullOrEmpty(secondImageUrl))
                    {
                        <div class="carousel-image-container">
                            <img src="@secondImageUrl" alt="Image Cover" class="d-block w-100 h-100" style="border-radius: 5px; object-fit: cover; width: 80%; height: auto; margin: 0 auto;" />
                        </div>
                    }
                    else
                    {
                        <p>Không có hình ảnh để hiển thị.</p>
                    }
                }
                else
                {
                    <p>Không có hình ảnh để hiển thị.</p>
                }
            </div>
        </div>
    </div>


    <!-- Phần thông tin game -->
    <div class="row mt-4">
        <div class="col-md-8 game-info">
            @if (Model.Prod != null)
            {
                var product = Model.Prod;
                <h1 class="fw-bold mt-2" style="font-size:3vw;">@product.Name</h1>
                <div class="row">
                    <div class="col-md-10 mb-3">
                        <!-- Đoạn code của bạn ở bên trái -->
                        <div class="product-details">
                            <!-- Nội dung sản phẩm của bạn -->
                            <div class="product-detail-item row">
                                <div class="col-auto">
                                    <i class="fas fa-shopping-cart"></i>
                                </div>
                                <div class="col">
                                    <strong>Sold: </strong>
                                    <span style="padding-left: 5px;">
                                        @(product.Sold == 0 ? " None" : product.Sold.ToString())
                                    </span>
                                </div>
                            </div>

                            <div class="product-detail-item row">
                                <div class="col-auto">
                                    <i class="fas fa-percent"></i>
                                </div>
                                <div class="col">
                                    <strong>Discount: </strong>
                                    <span style="padding-left: 5px;">
                                        @(product.Discount == 0 ? " None" :  product.Discount.ToString() + "%")
                                    </span>
                                </div>
                            </div>

                            <div class="product-detail-item row">
                                <div class="col-auto">
                                    <i class="fas fa-thumbs-up"></i>
                                </div>
                                <div class="col">
                                    <strong>Likes: </strong>
                                    <span style="padding-left: 5px;">
                                        @(product.Interactions.NumberOfLikes == 0 ? " None" :  product.Interactions.NumberOfLikes.ToString())
                                    </span>
                                </div>
                            </div>

                            <div class="product-detail-item row">
                                <div class="col-auto">
                                    <i class="fas fa-dollar-sign"></i>
                                </div>
                                <div class="col">
                                    <strong>Price: </strong>
                                    <span style="padding-left: 5px;">
                                        @(product.Price == 0 ? " Free" : product.Price.ToString("C"))
                                    </span>
                                </div>
                            </div>

                            <div class="product-detail-item row">
                                <div class="col-auto">
                                    <i class="fas fa-tags"></i>
                                </div>
                                <div class="col">
                                    <strong>Tags: </strong>
                                    @if (product.Categories.Any())
                                    {
                                        var categoryNames = string.Join(", ", product.Categories.Select(c => c.CategoryName));
                                        <span style="padding-left: 5px;">@categoryNames</span>
                                    }
                                </div>
                            </div>

                            <div class="product-detail-item row" style="display: none;">
                                <div class="col-auto">
                                    <i class="fas fa-thumbs-up"></i>
                                </div>
                                <div class="col">
                                    <strong>Likes: </strong>
                                    <span>
                                        @product.UserName
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Nút Like và Dislike nằm ở phía trên bên phải -->
                    <form asp-controller="Product" method="post" class="col-md-2 d-flex justify-content-between" style="margin-top:2vw;">
                        <input type="hidden" name="ProductId" value="@product.Id" />

                        <!-- Nút Like với số lượt like -->
                        <button type="submit" name="action" value="like" class="sci-fi-btn like-btn">
                            <i class="fas fa-thumbs-up"></i>
                            <span class="like-count">
                                @(product.Interactions.NumberOfLikes == 0 ? "0" : product.Interactions.NumberOfLikes.ToString())
                            </span>
                        </button>

                        <!-- Nút Dislike -->
                        <button type="submit" name="action" value="dislike" class="sci-fi-btn dislike-btn ms-2">
                            <i class="fas fa-thumbs-down"></i>
                        </button>
                    </form>



                </div>
                

                <br />

                <p>by @product.Platform</p>

                //Pay
                <div class="product-price-container">
                    <div class="discount-section">
                        <span class="discount-rate">-50%</span>
                        <div class="price-section">
                            <span class="original-price">500.000đ</span>
                            <span class="discounted-price">250.000đ</span>
                        </div>
                    </div>
                    <a href="#" class="btn btn-success align-content-center w-25 fw-bold">Add To Cart</a>
                </div>

                //Free
                @* <div class="product-price-container">
                    <div class="discount-section">
                        <div class="price-section">
                            <span class="discounted-price">Free</span>
                        </div>
                    </div>
                    <a href="#" class="btn btn-success align-content-center w-25 fw-bold">Play</a>
                </div> *@



                <p class="mt-3">Click download now to get access to the following files:</p>
                <a href="#">e</a> <span> MB <i class="bi bi-android2"></i></span>

                <div class="row">
                    <!-- Hiển thị video và hình ảnh bên trái (xếp ngang) -->
                    <!-- Hình ảnh đầu tiên nằm bên trái -->
                    <div class="col-md-4 mb-3">
                        @if (product.Links.Any())
                        {
                            <img src="@product.Links.FirstOrDefault(link => link.Url.Contains("cloudinary"))?.Url" alt="First Image" class="img-fluid" />
                        }
                    </div>

                    <!-- Hiển thị các hình ảnh còn lại ở bên phải -->
                    <div class="col-md-8 mb-3 row">
                        @foreach (var link in product.Links.Where(link => link.Url.Contains("cloudinary")).Skip(1)) // Lọc trước rồi bỏ qua hình đầu tiên
                        {
                            <div class="col-md-6 mb-1">
                                <img src="@link.Url" alt="Image" class="img-fluid" />
                            </div>
                        }
                    </div>
                </div>

                <h3 class="mt-4">Description</h3>
                <p>@product.Description</p>

                <h3 class="mt-4">Comment</h3>

                @if (Model.CommentDTOModels != null)
                {
                    foreach (var comment in Model.CommentDTOModels)
                    {
                        if (comment != null) // Kiểm tra xem comment có phải là null không
                        {

                            <div class="comment">
                                <div class="row">
                                    <div class="col-md-1 comment-icon d-flex justify-content-center mt-5">
                                        <i class="fa-solid fa-user-secret"></i>
                                    </div>
                                    <div class="col-md-11 comment-body">
                                        <div class="comment-header">
                                            <p><strong>@comment.UserName</strong></p>
                                            <p class="created-at">@comment.CreatedAt.ToString("g")</p>
                                        </div>
                                        <div class="comment-content">
                                            <p>@comment.Content</p>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <!-- Nút "Xem thêm" -->
                                    <div class="col-md-6 text-start">
                                        <a id="toggleButton-@comment.Id"
                                           class="link-action"
                                           onclick="toggleReplies('@comment.Id')"
                                           style="width:50%; text-decoration:none; color:black; padding:5px; border-radius:5px; transition: all 0.3s;">
                                            Xem thêm 
                                        </a>
                                        |
                                        <a class="link-action"
                                           onclick="scrollToReplyForm('@comment.Id')"
                                           style="width:50%; text-decoration:none; color:black; padding:5px; border-radius:5px; transition: all 0.3s;">
                                            Reply
                                        </a>
                                    </div>

                                    <div class="col-md-6 comment-footer text-end">
                                        <p class="likes">
                                            <small>
                                                <span id="like-count-@comment.Id">@comment.NumberOfLikes</span>

                                                <!-- Form for Increasing Like -->
                                                <form asp-action="IncreaseLike" asp-controller="Product" method="post" style="display:inline;">
                                                    <!-- Hidden input to send the comment ID -->
                                                    <input type="hidden" name="commentID" value="@comment.Id" />
                                                    <!-- Hidden input to send the product ID -->
                                                    <input type="hidden" name="productID" value="@product.Id" />
                                                    <button type="submit" class="like-button" style="background:none; border:none; cursor:pointer;">
                                                        <i class="fa-solid fa-thumbs-up"></i>
                                                    </button>
                                                </form>

                                                <span id="dislike-count-@comment.Id">@comment.NumberOfDisLikes</span>

                                                <!-- Form for Decreasing Like -->
                                                <form asp-action="DecreaseLike" asp-controller="Product" method="post" style="display:inline;">
                                                    <!-- Hidden input to send the comment ID -->
                                                    <input type="hidden" name="commentID" value="@comment.Id" />
                                                    <!-- Hidden input to send the product ID -->
                                                    <input type="hidden" name="productID" value="@product.Id" />
                                                    <button type="submit" class="dislike-button" style="background:none; border:none; cursor:pointer;">
                                                        <i class="fa-solid fa-thumbs-down"></i>
                                                    </button>
                                                </form>
                                            </small>


                                        </p>
                                    </div>
                                </div>

                                <!-- Phần chứa các bình luận con -->
                                <div id="replies-@comment.Id" class="ms-5" style="display: none;"></div>

                            </div>
                        }
                    }
                }
                else
                {
                    <p>Không có bình luận nào để hiển thị.</p>
                }

                <!-- Form nhập bình luận -->
                <h4>Thêm bình luận</h4>
                <form asp-action="CreateComment" asp-controller="Product" method="post" enctype="multipart/form-data" id="comment-form">
                    <div class="form-group">
                        <label asp-for="createcomment.Content">Nội dung bình luận:</label>
                        <textarea asp-for="createcomment.Content" name="Content" class="form-control" required></textarea>
                        <span asp-validation-for="createcomment.Content" class="text-danger"></span>
                    </div>

                    <!-- Gán ProductId và UserName từ dữ liệu của sản phẩm và hiển thị nhưng không cho nhập -->
                    <div class="form-group" style="display:none">
                        <label asp-for="createcomment.ProductId">ProductId:</label>
                        <input asp-for="createcomment.ProductId" name="ProductId" class="form-control" value="@product.Id" readonly />
                    </div>
                    <div class="form-group" style="display:none">
                        <label asp-for="createcomment.UserName">UserName:</label>
                        <input asp-for="createcomment.UserName" name="UserName" class="form-control" value="@Model.userName" readonly />
                    </div>
                    <div class="form-group" style="display:none">
                        <label asp-for="createcomment.ParentId">ParentId:</label>
                        <input asp-for="createcomment.ParentId" name="ParentId" class="form-control" id="parentId" value="" readonly />
                    </div>
                    <!-- Gán trạng thái mặc định cho Status và hiển thị nhưng không cho nhập -->
                    <div class="form-group" style="display:none">
                        <label asp-for="createcomment.Status">Status:</label>
                        <input asp-for="createcomment.Status" name="Status" class="form-control" value="1" readonly />
                    </div>

                    <button type="submit" class="btn btn-primary">Gửi bình luận</button>
                </form>


            }
        </div>

        <!-- Game Detail Section -->
        <div class="col-md-4">
            @if (Model.Prod != null)
            {
                var product = Model.Prod;
                <div class="mt-3">
                    <section id="popular">
                        <div class="d-flex justify-content-between align-items-center">
                            <h3 style="font-size:2vw;">Same category</h3>
                            <div class="col-5 col-sm-5 col-md-5 footeer_card">
                                <div class="btn_card" style="display:flex;justify-content:flex-end;" style="width:250px;font-size:font: 15px Montserrat;">
                                    <a href="#" class="btn_orther" style="width:200px;font: 15px Montserrat;">View More</a>
                                </div>
                            </div>
                        </div>
                        <div class="wrapper_other">
                            @if (Model.Product != null)
                            {
                                // Lấy danh sách các danh mục của sản phẩm hiện tại
                                var currentProductCategories = product.Categories.Select(c => c.CategoryName).ToList();

                                // Lọc ra những sản phẩm thuộc cùng danh mục với sản phẩm hiện tại
                                var filteredProducts = Model.Product
                                .Where(p => p.Categories.Any(c => currentProductCategories.Contains(c.CategoryName))) // Kiểm tra danh mục trùng
                                .ToList();

                                // Lấy ngẫu nhiên 3 sản phẩm
                                var randomTopViewedProducts = filteredProducts
                                .OrderBy(_ => Guid.NewGuid()) // Sắp xếp ngẫu nhiên
                                .Take(3); // Lấy 3 sản phẩm

                                <div class="row">
                                    @foreach (var products in randomTopViewedProducts)
                                    {
                                        <div class="col-12">
                                            <!-- Đảm bảo mỗi sản phẩm đứng trên một hàng riêng biệt -->
                                            <div class="card_other mt-4" style="width: 100%; height: 450px;">
                                                @if (products.Links != null)
                                                {
                                                    string firstImageUrl = products.Links.FirstOrDefault(link => link.Url.Contains("cloudinary"))?.Url;
                                                    if (firstImageUrl != null)
                                                    {
                                                        <img src="@firstImageUrl" alt="Cloudinary Image" class="img-fluid" style="width: 100%;" />
                                                    }
                                                }
                                                <div class="info_other">
                                                    <h1>@products.Name</h1>
                                                    <p>
                                                        @(products.Description.Length > 100
                                                            ? products.Description.Substring(0, 100) + "..."
                                                            : products.Description)
                                                    </p>
                                                    <a asp-controller="Product" asp-action="ProductDetail" asp-route-Id="@products.Id" class="btn_orther">Read More</a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </section>
                </div>
            }
        </div>

    </div>

</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    function Xemthem(contentId, buttonId) {
        const contentElement = document.getElementById(contentId);
        const buttonElement = document.getElementById(buttonId);
        if (contentElement) { // Kiểm tra xem phần tử có tồn tại không
            if (contentElement.style.display === "none") {
                contentElement.style.display = "block"; // Hiện phần nội dung
                buttonElement.innerText = "Ẩn bớt..."; // Thay đổi văn bản thành "Ẩn bớt"
            } else {
                contentElement.style.display = "none"; // Ẩn phần nội dung
                buttonElement.innerText = "Nội dung phản hồi..."; // Thay đổi văn bản trở lại "Xem thêm"
            }
        } else {
            console.error("Element with ID " + contentId + " not found.");
        }
    }

    function toggleReplies(parentId) {
        var repliesContainer = $('#replies-' + parentId);
        var button = $('#toggleButton-' + parentId);
        var replyLink = $('#replyLink-' + parentId); // Nút Reply

        if (repliesContainer.is(':visible')) {
            // Nếu bình luận con đang hiển thị, ẩn và thay đổi văn bản nút thành "Xem thêm"
            repliesContainer.hide();
            button.text('Xem thêm');
            replyLink.show();  // Hiện lại nút Reply
        } else {
            // Nếu bình luận con đang ẩn, tải bình luận con nếu chưa có và đổi văn bản nút thành "Ẩn bớt"
            if (repliesContainer.html().trim() === '') {
                $.ajax({
                    url: '/Product/GetReply',
                    type: 'GET',
                    data: { parentId: parentId },
                    success: function (data) {
                        repliesContainer.html(data).show();
                        button.text('Ẩn bớt');
                        replyLink.hide();  // Ẩn nút Reply khi có bình luận con
                    },
                    error: function () {
                        alert('Không thể tải phản hồi. Vui lòng thử lại sau.');
                    }
                });
            } else {
                repliesContainer.show();
                button.text('Ẩn bớt');
                replyLink.hide();  // Ẩn nút Reply khi có bình luận con
            }
        }
    }

    function scrollToReplyForm(parentId) {
        // Cuộn xuống phần form nhập bình luận
        $('html, body').animate({
            scrollTop: $('#comment-form').offset().top
        }, 500);

        // Điền ParentId vào form
        $('input[name="ParentId"]').val(parentId);
    }
</script>

