@using Client.Models.ProductDTO
@model ProductViewModel

@{
    var HasOwned = ViewBag.HasOwned;
    List<LinkModel> LinkDownload = ViewBag.UrlsDownLoad as List<LinkModel>;
}

<style>
    .liked {
        color: blue;
    }

    .disliked {
        color: red;
    }
    /* CSS như cũ */
    #anh-bia img {
        width: 100%;
        height: 500px;
        object-fit: cover;
        border-radius: 20px;
    }

    .product-details {
        margin-top: 20px;
    }

    .product-detail-item {
        margin-bottom: 12px;
        font-size: 16px;
        display: flex;
        align-items: center;
    }

        .product-detail-item i {
            font-size: 18px; /* Điều chỉnh kích thước biểu tượng */
            color: #00A97F;
            width: 10px;
            height: 10px;
        }

        .product-detail-item strong {
            font-weight: bold;
        }

        .product-detail-item .col {
            font-weight: normal;
            display: flex;
            align-items: center;
        }


    /*Comment*/
    .comment {
        margin: 5px 0;
    }

    .comment-body {
        border: 1px solid #ccc; /* Border bao quanh cả username và content */
        padding: 10px;
        border-radius: 5px;
        margin-bottom: 5px; /* Khoảng cách phía dưới */
    }

    .comment-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 5px; /* Giảm khoảng cách giữa header và content */
    }

    .comment-content {
        margin: 0; /* Giảm khoảng cách phía trên và dưới của content */
    }

    .comment-footer {
        display: flex;
        justify-content: flex-end;
    }

        .comment-footer .likes {
            margin-left: auto;
        }

    .created-at {
        font-size: 0.9em;
        color: gray;
    }

    .product-price-container {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    /* Enhanced Discount Section */
    .discount-section {
        display: flex;
        background: linear-gradient(135deg, #198754, #1f9b6c); /* Subtle gradient for depth */
        padding: 10px 15px;
        border: 2px solid #146c43; /* Darker green for border */
        border-radius: 8px;
        color: white;
        font-weight: bold;
        font-size: 22px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Soft shadow for depth */
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .discount-rate {
        font-size: 26px;
        margin-right: 15px;
    }

    .price-section {
        display: flex;
        flex-direction: column;
    }

    .original-price {
        text-decoration: line-through;
        color: #b0b0b0;
        font-size: 16px;
    }

    .discounted-price {
        color: white;
        font-size: 20px;
        font-weight: bold;
    }

    /* Discount Section Hover Effect */
    .discount-section:hover {
        transform: scale(1.05);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15); /* More shadow on hover */
    }

    /*Cai này là hover vào hinh ảnh sẽ zoom len ne*/
    .col-md-4.mb-3,
    .col-md-8.mb-3 .col-md-6 {
        overflow: hidden; /* Ẩn phần ảnh vượt quá giới hạn */
    }

    .img-fluid {
        transition: transform 1s ease;
    }

        .img-fluid:hover {
            transform: scale(1.2); /* Zoom nhẹ khi hover */
        }


    /*Xem them vơi reply nha*/
    .link-action {
        cursor: pointer;
    }

        .link-action:hover {
            color: #00A97F; /* Màu khi hover */
            background-color: #f0f0f0; /* Màu nền khi hover */
        }

</style>

<div class="container mt-4">
    <!-- Ảnh bìa -->
    <div class="row">
        <div class="col-12">
            <div id="anh-bia">
                @if (Model.Prod != null)
                {
                    var Prod = Model.Prod;
                    var secondImageUrl = Prod.Links?
                    .Where(link => link.Url.Contains("cloudinary"))
                    .Skip(1) // Bỏ qua hình ảnh đầu tiên
                    .FirstOrDefault()?.Url; // Lấy hình ảnh thứ hai

                    if (!string.IsNullOrEmpty(secondImageUrl))
                    {
                        <div class="carousel-image-container">
                            <img src="@secondImageUrl" alt="Image Cover" class="d-block w-100 h-100" style="border-radius: 5px; object-fit: cover; width: 80%; height: auto; margin: 0 auto;" />
                        </div>
                    }
                    else
                    {
                        <p>Không có hình ảnh để hiển thị.</p>
                    }
                }
                else
                {
                    <p>Không có hình ảnh để hiển thị.</p>
                }
            </div>
        </div>
    </div>


    <!-- Phần thông tin game -->
    <div class="row mt-4">
        <div class="col-md-8 game-info">
            @if (Model.Prod != null)
            {
                var product = Model.Prod;
                <h1 class="fw-bold mt-2" style="font-size:3vw;">@product.Name</h1>
                <div class="row">
                    <div class="col-md-10 mb-3">
                        <!-- Đoạn code của bạn ở bên trái -->
                        <div class="product-details">
                            <!-- Nội dung sản phẩm của bạn -->
                            <div class="product-detail-item row">
                                <div class="col-auto">
                                    <i class="fas fa-shopping-cart"></i>
                                </div>
                                <div class="col">
                                    <strong>Sold: </strong>
                                    <span style="padding-left: 5px;">
                                        @(product.Sold == 0 ? " None" : product.Sold.ToString())
                                    </span>
                                </div>
                            </div>

                            <div class="product-detail-item row">
                                <div class="col-auto">
                                    <i class="fas fa-percent"></i>
                                </div>
                                <div class="col">
                                    <strong>Discount: </strong>
                                    <span style="padding-left: 5px;">
                                        @(product.Discount == 0 ? " None" : product.Discount.ToString() + "%")
                                    </span>
                                </div>
                            </div>

                            <div class="product-detail-item row">
                                <div class="col-auto">
                                    <i class="fas fa-thumbs-up"></i>
                                </div>
                                <div class="col">
                                    <strong>Likes: </strong>
                                    <span style="padding-left: 5px;">
                                        @(product.Interactions.NumberOfLikes == 0 ? " None" : product.Interactions.NumberOfLikes.ToString())
                                    </span>
                                </div>
                            </div>

                            <div class="product-detail-item row">
                                <div class="col-auto">
                                    <i class="fas fa-dollar-sign"></i>
                                </div>
                                <div class="col">
                                    <strong>Price: </strong>
                                    <span style="padding-left: 5px;">
                                        @(product.Price == 0 ? "Free" : string.Format("{0:N0} VNĐ", product.Price))
                                    </span>
                                </div>
                            </div>

                            <div class="product-detail-item row">
                                <div class="col-auto">
                                    <i class="fas fa-tags"></i>
                                </div>
                                <div class="col">
                                    <strong>Tags: </strong>
                                    @if (product.Categories.Any())
                                    {
                                        var categoryNames = string.Join(", ", product.Categories.Select(c => c.CategoryName));
                                        <span style="padding-left: 5px;">@categoryNames</span>
                                    }
                                </div>
                            </div>

                            <div class="product-detail-item row" style="display: none;">
                                <div class="col-auto">
                                    <i class="fas fa-thumbs-up"></i>
                                </div>
                                <div class="col">
                                    <strong>Likes: </strong>
                                    <span>
                                        @product.UserName
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Nút Like và Dislike nằm ở phía trên bên phải -->
                    @* <form asp-controller="Product" method="post" class="col-md-2 d-flex justify-content-between" style="margin-top:2vw;">
                <input type="hidden" name="ProductId" value="@product.Id" />

                <!-- Nút Like với số lượt like -->
                <button type="submit" name="action" value="like" class="sci-fi-btn like-btn  ">
                <i class="fas fa-thumbs-up"></i>
                <span class="like-count">
                @(product.Interactions.NumberOfLikes == 0 ? "0" : product.Interactions.NumberOfLikes.ToString())
                </span>
                </button>

                <!-- Nút Dislike -->
                <button type="submit" name="action" value="dislike" class="sci-fi-btn dislike-btn ms-2  ">
                <i class="fas fa-thumbs-down"></i>
                </button>
                </form> *@

                    <div class="col-md-2 d-flex justify-content-between" style="margin-top:2vw;">
                        <!-- Form for Increasing Like -->
                        <form asp-action="IncreaseLikeProduct" asp-controller="Product" method="post" style="display:inline;" class="like-form2 ">
                            <!-- Hidden input to send the comment ID -->
                            <input type="hidden" name="productID" value="@product.Id" />


                            <button type="submit" class="sci-fi-btn like-btn">
                                <i class="fa-solid fa-thumbs-up"></i>
                                <span id="like-count-@product.Id" class="like-count">@product.Interactions.NumberOfLikes</span>
                            </button>
                        </form>

                        <!-- Form for Decreasing Like -->
                        <form asp-action="DecreaseLikeProduct" asp-controller="Product" method="post" style="display:inline;" class="dislike-form2 ">
                            <!-- Hidden input to send the comment ID -->
                            <input type="hidden" name="productID" value="@product.Id" />


                            <button type="submit" class="sci-fi-btn dislike-btn ms-2">
                                <i class="fa-solid fa-thumbs-down"></i>
                                <span id="dislike-count-@product.Id" class="dislike-count">@product.Interactions.NumberOfDisLikes</span>
                            </button>
                        </form>
                    </div>
                </div>

                <br />

                <p>by @product.Platform</p>

                @if (LinkDownload != null)
                {
                    @if (LinkDownload.Count != 0)
                    {
                        <div class="product-price-container">
                            <div class="discount-section">
                                <div class="price-section">
                                    <span class="discounted-price">Owned</span>
                                </div>
                            </div>
                            <a data-bs-toggle="modal" data-bs-target="#downloadModal" class="btn btn-success align-content-center w-25 fw-bold">Play</a>
                        </div>
                    }
                }
                else
                {
                    //Pay
                    <div class="product-price-container">
                        <div class="discount-section">
                            @* Free *@
                            @if (Model.Prod.Discount == 100 || Model.Prod.Price == 0)
                            {
                                <div class="product-price-container">
                                    <div class="discount-section">
                                        <div class="price-section">
                                            <span class="discounted-price">Free</span>
                                        </div>
                                    </div>
                                    <a data-bs-toggle="modal" data-bs-target="#downloadModal" class="btn btn-success align-content-center w-25 fw-bold">Play</a>
                                </div>
                            }
                            else
                            {
                                <span class="discount-rate">@Model.Prod.Discount%</span>
                                <div class="price-section">
                                    <span class="original-price">
                                        <input type="text" hidden asp-for="@Model.Prod.Price" />
                                        @Model.Prod.Price vnđ
                                    </span>
                                    <span class="discounted-price">@(Model.Prod.Price - (Model.Prod.Price * (decimal)Model.Prod.Discount / 100m)) vnđ</span>
                                </div>
                            }
                        </div>
                        <form class="align-content-center w-25 fw-bold" asp-action="Cart" asp-controller="User">
                            <input type="text" hidden asp-for="Prod.Id" />
                            <input type="text" hidden asp-for="Prod.Name" />
                            <input type="text" hidden asp-for="Prod.UserName" />
                            <input type="text" hidden asp-for="Prod.Discount" />
                            <input type="text" hidden asp-for="Prod.Price" />
                            @for (int i = 0; i < Model.Prod.Links.Count; i++)
                            {
                                <input type="hidden" name="Prod.Links[@i].Url" value="@Model.Prod.Links.ElementAt(i).Url" />
                            }
                            <button type="submit" class="btn btn-success ">Add To Cart</button>
                        </form>

                    </div>
                }
                //Free
                @* <div class="product-price-container">
            <div class="discount-section">
            <div class="price-section">
            <span class="discounted-price">Free</span>
            </div>
            </div>
            <a href="#" class="btn btn-success align-content-center w-25 fw-bold">Play</a>
            </div> *@




                <p class="mt-3">Click download now to get access to the following files:</p>
                <a href="#">e</a> <span> MB <i class="bi bi-android2"></i></span>

                <div class="row">
                    <!-- Hiển thị video và hình ảnh bên trái (xếp ngang) -->
                    <!-- Hình ảnh đầu tiên nằm bên trái -->
                    <div class="col-md-4 mb-3">
                        @if (product.Links.Any())
                        {
                            <img src="@product.Links.FirstOrDefault(link => link.Url.Contains("cloudinary"))?.Url" alt="First Image" class="img-fluid" />
                        }
                    </div>

                    <!-- Hiển thị các hình ảnh còn lại ở bên phải -->
                    <div class="col-md-8 mb-3 row">
                        @foreach (var link in product.Links.Where(link => link.Url.Contains("cloudinary")).Skip(1)) // Lọc trước rồi bỏ qua hình đầu tiên
                        {
                            <div class="col-md-6 mb-1">
                                <img src="@link.Url" alt="Image" class="img-fluid" />
                            </div>
                        }
                    </div>
                </div>

                <h3 class="mt-4">Description</h3>
                <p>@product.Description</p>

                <h3 class="mt-4">Comment</h3>
                <div id="comments-section">
                    @if (Model.CommentDTOModels != null)
                    {
                        foreach (var comment in Model.CommentDTOModels)
                        {
                            @await Html.PartialAsync("_CommentPartial", comment)

                           
                        }
                    }
                    else
                    {
                        <p>Không có bình luận nào để hiển thị.</p>
                    }
                </div>


                <!-- Form nhập bình luận -->
                <h4>Thêm bình luận</h4>
                <form asp-action="CreateComment" asp-controller="Product" method="post" enctype="multipart/form-data" id="comment-form">
                    <div class="form-group">
                        <label asp-for="createcomment.Content">Nội dung bình luận:</label>
                        <textarea asp-for="createcomment.Content" name="Content" class="form-control" required></textarea>
                        <span asp-validation-for="createcomment.Content" class="text-danger"></span>
                    </div>

                    <!-- Gán ProductId và UserName từ dữ liệu của sản phẩm và hiển thị nhưng không cho nhập -->
                    <div class="form-group" style="display:none">
                        <label asp-for="createcomment.ProductId">ProductId:</label>
                        <input asp-for="createcomment.ProductId" name="ProductId" class="form-control" value="@product.Id" readonly />
                    </div>
                    <div class="form-group" style="display:none">
                        <label asp-for="createcomment.UserName">UserName:</label>
                        <input asp-for="createcomment.UserName" name="UserName" class="form-control" value="@Model.userName" readonly />
                    </div>
                    <div class="form-group" style="display:none">
                        <label asp-for="createcomment.ParentId">ParentId:</label>
                        <input asp-for="createcomment.ParentId" name="ParentId" class="form-control" id="parentId" value="" readonly />
                    </div>
                    <!-- Gán trạng thái mặc định cho Status và hiển thị nhưng không cho nhập -->
                    <div class="form-group" style="display:none">
                        <label asp-for="createcomment.Status">Status:</label>
                        <input asp-for="createcomment.Status" name="Status" class="form-control" value="1" readonly />
                    </div>

                    <button type="submit" class="btn btn-primary mt-2">Gửi bình luận</button>
                </form>


            }
        </div>

        <!-- Game Detail Section -->
        <div class="col-md-4">
            @if (Model.Prod != null)
            {
                var product = Model.Prod;
                var cate = product.Categories.FirstOrDefault()?.CategoryName;
                <div class="mt-3">
                    <section id="popular">
                        <div class="d-flex justify-content-between align-items-center">
                            <h2 class="same" style="font-size:2vw;">Same category</h2>
                            <div class="col-5 col-sm-5 col-md-5 footeer_card">
                                <div class="btn_card" style="display:flex;justify-content:flex-end;" style="width:250px;font-size:font: 15px Montserrat;">
                                    <a asp-action="ViewAll" asp-controller="Product" asp-route-viewString="@cate" value="@cate" class="btn_orther" style="width:200px;font: 15px Montserrat;">View More</a>
                                </div>
                            </div>
                        </div>
                        <div class="wrapper_other">
                            @if (Model.Product != null)
                            {
                                // Lấy một danh mục ngẫu nhiên từ sản phẩm hiện tại
                                var randomCategory = product.Categories
                                .OrderBy(_ => Guid.NewGuid())
                                .FirstOrDefault()?.CategoryName;

                                // Kiểm tra nếu randomCategory có giá trị
                                if (!string.IsNullOrEmpty(randomCategory))
                                {
                                    // Lọc ra những sản phẩm thuộc cùng danh mục với danh mục ngẫu nhiên này
                                    var filteredProducts = Model.Product
                                    .Where(p => p.Categories.Any(c => c.CategoryName == randomCategory)) // Kiểm tra danh mục trùng với danh mục ngẫu nhiên
                                    .ToList();

                                    // Lấy ngẫu nhiên 3 sản phẩm
                                    var randomTopViewedProducts = filteredProducts
                                    .OrderBy(_ => Guid.NewGuid()) // Sắp xếp ngẫu nhiên
                                    .Take(3); // Lấy 3 sản phẩm

                                    <div class="row">
                                        @foreach (var products in randomTopViewedProducts)
                                        {
                                            <div class="col-12">
                                                <!-- Đảm bảo mỗi sản phẩm đứng trên một hàng riêng biệt -->
                                                <div class="card_other mt-4" style="width: 100%; height: 450px;">
                                                    @if (products.Links != null)
                                                    {
                                                        string firstImageUrl = products.Links.FirstOrDefault(link => link.Url.Contains("cloudinary"))?.Url;
                                                        if (firstImageUrl != null)
                                                        {
                                                            <img src="@firstImageUrl" alt="Cloudinary Image" class="img-fluid" style="width: 100%;" />
                                                        }
                                                    }

                                                    <div class="info_other">
                                                        <h1>@products.Name</h1>
                                                        <p>
                                                            @(products.Description.Length > 100
                                                                ? products.Description.Substring(0, 100) + "..."
                                                                : products.Description)
                                                        </p>
                                                        @*  <a asp-controller="Product" asp-action="ProductDetail" asp-route-Id="@products.Id" class="btn_orther">Read More</a> *@
                                                        <div class="row d-flex align-items-center justify-content-between">
                                                            <a asp-controller="Product" asp-action="ProductDetail" asp-route-Id="@products.Id" class="ms-3 col-md-5 text-center btn_orther">Read More</a>
                                                            <div class="col-md-3"></div>
                                                            @* Day la trai tym ne *@
                                                            <div title="Wishlist" class="col-md-1 heart-container">
                                                                <form id="wishlistForm" method="post">
                                                                    <input type="hidden" name="ProductId" id="ProductId" value="@product.Id" />
                                                                    <input type="hidden" name="ProductName" id="ProductName" value="@product.Name" />
                                                                    <input type="hidden" name="ProductPrice" id="ProductPrice" value="@product.Price" />

                                                                    @{
                                                                        string secondImageUrl2 = null;
                                                                        int imageCount2 = 0;
                                                                    }
                                                                    @foreach (var link in product.Links)
                                                                    {
                                                                        if (link.Url.Contains("cloudinary"))
                                                                        {
                                                                            imageCount2++;
                                                                            if (imageCount2 == 2)
                                                                            {
                                                                                secondImageUrl2 = link.Url;
                                                                                break;
                                                                            }
                                                                        }
                                                                    }
                                                                    <input type="hidden" name="ProductImage" id="ProductImage" value="@secondImageUrl2" />

                                                                    <!-- Checkbox hidden -->
                                                                    <input type="checkbox" id="wishlistCheckbox" class="checkbox" onclick="addToWishList('@product.Id', '@product.Name', '@product.Price', '@secondImageUrl2')" />

                                                                    <!-- Icon trái tim -->
                                                                    <div class="svg-container">
                                                                        <svg xmlns="http://www.w3.org/2000/svg" class="svg-outline" viewBox="0 0 24 24">
                                                                            <path d="M17.5,1.917a6.4,6.4,0,0,0-5.5,3.3,6.4,6.4,0,0,0-5.5-3.3A6.8,6.8,0,0,0,0,8.967c0,4.547,4.786,9.513,8.8,12.88a4.974,4.974,0,0,0,6.4,0C19.214,18.48,24,13.514,24,8.967A6.8,6.8,0,0,0,17.5,1.917Zm-3.585,18.4a2.973,2.973,0,0,1-3.83,0C4.947,16.006,2,11.87,2,8.967a4.8,4.8,0,0,1,4.5-5.05A4.8,4.8,0,0,1,11,8.967a1,1,0,0,0,2,0,4.8,4.8,0,0,1,4.5-5.05A4.8,4.8,0,0,1,22,8.967C22,11.87,19.053,16.006,13.915,20.313Z"></path>
                                                                        </svg>
                                                                        <svg xmlns="http://www.w3.org/2000/svg" class="svg-filled" viewBox="0 0 24 24">
                                                                            <path d="M17.5,1.917a6.4,6.4,0,0,0-5.5,3.3,6.4,6.4,0,0,0-5.5-3.3A6.8,6.8,0,0,0,0,8.967c0,4.547,4.786,9.513,8.8,12.88a4.974,4.974,0,0,0,6.4,0C19.214,18.48,24,13.514,24,8.967A6.8,6.8,0,0,0,17.5,1.917Z"></path>
                                                                        </svg>
                                                                        <svg xmlns="http://www.w3.org/2000/svg" height="100" width="100" class="svg-celebrate">
                                                                            <polygon points="10,10 20,20"></polygon>
                                                                            <polygon points="10,50 20,50"></polygon>
                                                                            <polygon points="20,80 30,70"></polygon>
                                                                            <polygon points="90,10 80,20"></polygon>
                                                                            <polygon points="90,50 80,50"></polygon>
                                                                            <polygon points="80,80 70,70"></polygon>
                                                                        </svg>
                                                                    </div>
                                                                </form>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <!-- Thêm phần số lượt view -->
                                                <div class="view-count">
                                                    <i class="fa-solid fa-eye" style="color:black;  width:30px;height:30px;"></i>
                                                    <span style="color:black;">@products.Interactions.NumberOfViews</span>
                                                </div>

                                                <div class="like-dislike-container">
                                                    <!-- Like và Dislike -->
                                                    <form asp-action="IncreaseLikeProduct" asp-controller="Product" method="post" style="display:inline;">
                                                        <input type="hidden" name="productID" value="@products.Id" />
                                                        <span id="like-count-@products.Id" class="like-count" style="color:black;">@products.Interactions.NumberOfLikes</span>
                                                        <i class="fa-solid fa-thumbs-up like-icon" style="color:black; width:30px;height:30px;"></i>
                                                    </form>

                                                    <form asp-action="DecreaseLikeProduct" asp-controller="Product" method="post" style="display:inline;">
                                                        <input type="hidden" name="productID" value="@products.Id" />
                                                        <span id="dislike-count-@products.Id" class="dislike-count" style="color:black;">@products.Interactions.NumberOfDisLikes</span>
                                                        <i class="fa-solid fa-thumbs-down dislike-icon" style="color:black; width:30px;height:30px;"></i>
                                                    </form>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            }

                        </div>
                    </section>
                </div>
            }
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    @*  ajax tang like.dislike *@
        $(document).ready(function () {
            // Sự kiện khi submit form like
            $('.like-form2').on('submit', function (e) {
                e.preventDefault();
                const form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cập nhật số lượt like
                            $(`#like-count-${response.productId}`).text(response.newLikeCount);
                            toastr.success(response.message || 'Like Bình luận đã thành công!')
                        } else {
                            toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                    }
                });
            });

            // Sự kiện khi submit form dislike
            $('.dislike-form2').on('submit', function (e) {
                e.preventDefault();
                const form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cập nhật số lượt dislike
                            $(`#dislike-count-${response.productId}`).text(response.newDislikeCount);
                            toastr.success(response.message || 'DisLike Bình luận đã thành công!')
                        } else {
                            toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                    }
                });
            });
        });
    @*  ajax tang like.dislike *@

    @* ajax hien thi reply *@
        function toggleReplies(parentId) {
            var repliesContainer = $('#replies-' + parentId);
            var button = $('#toggleButton-' + parentId);
            var replyLink = $('#replyLink-' + parentId); // Nút Reply

            if (repliesContainer.is(':visible')) {
                // Nếu bình luận con đang hiển thị, ẩn và thay đổi văn bản nút thành "Xem thêm"
                repliesContainer.hide();
                button.text('Xem thêm');
                replyLink.show();  // Hiện lại nút Reply
            } else {
                // Nếu bình luận con đang ẩn, tải bình luận con nếu chưa có và đổi văn bản nút thành "Ẩn bớt"
                if (repliesContainer.html().trim() === '') {
                    $.ajax({
                        url: '/Product/GetReply',
                        type: 'GET',
                        data: { parentId: parentId },
                        success: function (data) {
                            repliesContainer.html(data).show();
                            button.text('Ẩn bớt');
                            replyLink.hide();  // Ẩn nút Reply khi có bình luận con
                        },
                        error: function () {
                            alert('Không thể tải phản hồi. Vui lòng thử lại sau.');
                        }
                    });
                } else {
                    repliesContainer.show();
                    button.text('Ẩn bớt');
                    replyLink.hide();  // Ẩn nút Reply khi có bình luận con
                }
            }
        }
    @*ajax hien thi reply *@

    @* scroll xuong createcomment *@
        function scrollToReplyForm(parentId) {
            // Cuộn xuống phần form nhập bình luận
            $('html, body').animate({
                scrollTop: $('#comment-form').offset().top
            }, 500);

            // Điền ParentId vào form
            $('input[name="ParentId"]').val(parentId);
        }
    @* scroll xuong createcomment *@

    @* DOM Doi mau nut like.dislike *@
        document.addEventListener('DOMContentLoaded', function () {
            // Lấy tất cả các form like và dislike
            const likeForms = document.querySelectorAll('.like-form');
            const dislikeForms = document.querySelectorAll('.dislike-form');

            likeForms.forEach(form => {
                form.addEventListener('submit', function (event) {
                    event.preventDefault(); // Ngăn form submit để xử lý màu sắc

                    const likeIcon = form.querySelector('.fa-thumbs-up');
                    if (likeIcon) {
                        likeIcon.style.color = 'green'; // Đổi màu nút like thành xanh
                    }

                    // Tìm form dislike liên quan
                    const dislikeForm = form.closest('form').nextElementSibling; // Tìm form kế tiếp nếu có
                    if (dislikeForm && dislikeForm.querySelector('.fa-thumbs-down')) {
                        const dislikeIcon = dislikeForm.querySelector('.fa-thumbs-down');
                        if (dislikeIcon) {
                            dislikeIcon.style.color = ''; // Đặt lại màu dislike về mặc định
                        }
                    }
                });
            });

            dislikeForms.forEach(form => {
                form.addEventListener('submit', function (event) {
                    event.preventDefault(); // Ngăn form submit để xử lý màu sắc

                    const dislikeIcon = form.querySelector('.fa-thumbs-down');
                    if (dislikeIcon) {
                        dislikeIcon.style.color = 'red'; // Đổi màu nút dislike thành đỏ
                    }

                    // Tìm form like liên quan
                    const likeForm = form.previousElementSibling.previousElementSibling; // Tìm form trước đó nếu có
                    if (likeForm && likeForm.querySelector('.fa-thumbs-up')) {
                        const likeIcon = likeForm.querySelector('.fa-thumbs-up');
                        if (likeIcon) {
                            likeIcon.style.color = ''; // Đặt lại màu like về mặc định
                        }
                    }
                });
            });
        });
    @* DOM Doi mau nut like.dislike *@

    @*  ajax tang like.dislike *@
        $(document).ready(function () {
            // Sự kiện khi submit form like
            $('.like-form').on('submit', function (e) {
                e.preventDefault();
                const form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cập nhật số lượt like
                            $(`#like-count-${response.commentId}`).text(response.newLikeCount);
                            toastr.success(response.message || 'Like Bình luận đã thành công!')
                        } else {
                            toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                    }
                });
            });

            // Sự kiện khi submit form dislike
            $('.dislike-form').on('submit', function (e) {
                e.preventDefault();
                const form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    type: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Cập nhật số lượt dislike
                            $(`#dislike-count-${response.commentId}`).text(response.newDislikeCount);
                            toastr.success(response.message || 'DisLike Bình luận đã thành công!')
                        } else {
                            toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                    }
                });
            });
        });
    @*  ajax tang like.dislike *@

    @*  ajax hien thi comment moi *@
        $(document).ready(function () {
            // Xử lý khi gửi form bình luận
            $('#comment-form').submit(function (e) {
                e.preventDefault(); // Ngừng gửi form theo cách thông thường

                var formData = new FormData(this);

                $.ajax({
                    url: '@Url.Action("CreateComment", "Product")',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        if (response.success) {
                            // Xử lý khi bình luận thành công
                            var parentCommentId = $('#comment-form input[name="ParentId"]').val();
                            if (parentCommentId) {
                                var repliesContainer = $('#replies-' + parentCommentId);
                                if (repliesContainer.is(':hidden')) {
                                    repliesContainer.show();
                                }
                                repliesContainer.prepend(response.html);
                            } else {
                                $('#comments-section').prepend(response.html);
                            }
                            $('#comment-form')[0].reset();
    @* alert('Bình luận đã được gửi thành công!'); *@
                                toastr.success(response.message)
    @* // Gắn lại sự kiện like và dislike cho bình luận mới *@
                                bindLikeDislikeEvents();
                            bindLikeDislikeEvents2()
                        } else {
                            if (response.message) {
                                toastr.error(response.message);
                            } else {
                                toastr.error('Có lỗi xảy ra, vui lòng thử lại.');
                            }
                        }
                    },
                    error: function () {
                        toastr.error('Có lỗi xảy ra, vui lòng thử lại.');
                    }
                });
            });

    @*  // Hàm để gắn sự kiện like/dislike cho tất cả các bình luận *@
                function bindLikeDislikeEvents() {
                    // Xử lý khi submit form like (cho các bình luận cũ và mới)
                    $('.like-form').off('submit').on('submit', function (e) {
                        e.preventDefault();
                        const form = $(this);
                        $.ajax({
                            url: form.attr('action'),
                            type: form.attr('method'),
                            data: form.serialize(),
                            success: function (response) {
                                if (response.success) {
                                    // Cập nhật số lượt like
                                    $(`#like-count-${response.commentId}`).text(response.newLikeCount);
                                    toastr.success(response.message || 'Like Bình luận đã thành công!')
                                } else {

                                    toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                                }
                            },
                            error: function (xhr) {

                                toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                            }
                        });
                    });

                    // Xử lý khi submit form dislike (cho các bình luận cũ và mới)
                    $('.dislike-form').off('submit').on('submit', function (e) {
                        e.preventDefault();
                        const form = $(this);
                        $.ajax({
                            url: form.attr('action'),
                            type: form.attr('method'),
                            data: form.serialize(),
                            success: function (response) {
                                if (response.success) {
                                    // Cập nhật số lượt dislike
                                    $(`#dislike-count-${response.commentId}`).text(response.newDislikeCount);
                                    toastr.success(response.message || 'DisLike Bình luận đã thành công!')
                                } else {
                                    toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                                }
                            },
                            error: function (xhr) {
                                toastr.error('Đã xảy ra lỗi: ' + xhr.responseText);
                            }
                        });
                    });
                }

    @*  // Hàm để gắn sự kiện đổi màu like/dislike cho các form *@
                function bindLikeDislikeEvents2() {
                    // Lấy tất cả các form like và dislike
                    const likeForms = document.querySelectorAll('.like-form');
                    const dislikeForms = document.querySelectorAll('.dislike-form');

                    // Gắn sự kiện cho các form like
                    likeForms.forEach(form => {
                        form.addEventListener('submit', function (event) {
                            event.preventDefault(); // Ngăn form submit để xử lý màu sắc
                            handleLikeDislikeSubmit(form, 'like');
                        });
                    });

                    // Gắn sự kiện cho các form dislike
                    dislikeForms.forEach(form => {
                        form.addEventListener('submit', function (event) {
                            event.preventDefault(); // Ngăn form submit để xử lý màu sắc
                            handleLikeDislikeSubmit(form, 'dislike');
                        });
                    });
                }

    @*  // Hàm xử lý submit đổi màu form like/dislike *@
                function handleLikeDislikeSubmit(form, type) {
                    const iconSelector = type === 'like' ? '.fa-thumbs-up' : '.fa-thumbs-down';
                    const icon = form.querySelector(iconSelector);

                    if (icon) {
                        // Thay đổi màu sắc dựa trên loại hành động (like/dislike)
                        if (type === 'like') {
                            icon.style.color = 'green'; // Đổi màu nút like thành xanh
                        } else {
                            icon.style.color = 'red'; // Đổi màu nút dislike thành đỏ
                        }
                    }

                    // Tìm form liên quan
                    const relatedFormSelector = type === 'like' ? 'nextElementSibling' : 'previousElementSibling.previousElementSibling';
                    const relatedForm = form.closest('form')[relatedFormSelector];

                    if (relatedForm && relatedForm.querySelector(type === 'like' ? '.fa-thumbs-down' : '.fa-thumbs-up')) {
                        const relatedIcon = relatedForm.querySelector(type === 'like' ? '.fa-thumbs-down' : '.fa-thumbs-up');
                        if (relatedIcon) {
                            relatedIcon.style.color = ''; // Đặt lại màu của form ngược lại về mặc định
                        }
                    }
                }

    @* // Gọi hàm gắn sự kiện like/dislike khi trang được tải *@
                bindLikeDislikeEvents();
            bindLikeDislikeEvents2()
        });
    @*  ajax hien thi comment moi *@
</script>




<!-- Modal -->
<div class="modal fade" id="downloadModal" tabindex="-1" aria-labelledby="downloadModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <!-- Header -->
            <div class="modal-header bg-light">
                <h5 class="modal-title text-success" id="downloadModalLabel">Download File</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <!-- Body -->
            <div class="modal-body">
                @if (LinkDownload != null)
                {
                    @if (LinkDownload.Count != 0)
                    {
                        foreach (var item in LinkDownload)
                        {
                            <div class="d-flex align-items-center mb-3">
                                <!-- Download Button -->
                                <a class="btn btn-success me-3" href="@item.Url">Download</a>

                                <!-- File Info -->
                                <div class="align-content-center"> 
                                    <span class="d-inline-block text-truncate" style="max-width: 300px;">@item.Url</span>
                                    @* <p class="mb-1 text-secondary">363 MB</p> *@
@*                                     <div>
                                        <!-- Platform Icon -->
                                        <i class="bi bi-windows fs-5 text-success" title="Windows"></i>
                                    </div> *@
                                </div>
                            </div>
                        }
                    }
                }

                <!-- Timestamp -->
                <div class="mt-3">
                    <p class="mb-0 text-secondary"><i class="bi bi-clock"></i> 56 days ago</p>
                </div>

                <!-- Help Link -->
                <div class="mt-2">
                    <a href="#" class="text-success text-decoration-none">Download not starting?</a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function addToWishList(productId, productName, productPrice, productImage) {
        // Cập nhật các giá trị input ẩn với thông tin của sản phẩm hiện tại
        document.getElementById('ProductId').value = productId;
        document.getElementById('ProductName').value = productName;
        document.getElementById('ProductPrice').value = productPrice;
        document.getElementById('ProductImage').value = productImage;

        // Tạo FormData và gửi request
        const formData = new FormData(document.getElementById('wishlistForm'));

        fetch('@Url.Action("AddWishList", "Admin")', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(response => {
                if (response.success) {
                    toastr.success(response.message || 'Thêm vào WishList  đã thành công!')
                } else {
                    toastr.error(response.message || 'Đã xảy ra lỗi không xác định.');
                    document.getElementById('wishlistCheckbox').checked = false;
                }
            })
            .catch(error => {
                alert("Có lỗi xảy ra: " + error.message);
                document.getElementById('wishlistCheckbox').checked = false;
            });
    }
</script>

