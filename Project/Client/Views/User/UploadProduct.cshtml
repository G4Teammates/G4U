@using Client.Models.ProductDTO
@model UpdateProductModel

@{
    List<LinkModel> Images = new List<LinkModel>();
    // List<IFormFile> Games = ViewBag.Games;
    // IFormFile gameImages = ViewBag.gameFile;
    // var gameFileName = ViewBag.GameFileName;
    // var gameFileSize = ViewBag.GameFileSize;

    string saveBtn = string.Empty;

    @if (!string.IsNullOrEmpty(Model.Id))
    {
        saveBtn = "UpdateProduct";
    }
    else
    {
        saveBtn = "UploadProductPost";
    }
}

<style>
    h4 {
        max-width: 900px;
    }

    .container-custom {
        max-width: 900px;
        border: 1px solid #ddd;
        background-color: #fff;
    }

    .form-section {
        border-bottom: 1px solid #ddd;
        padding-bottom: 20px;
        margin-bottom: 20px;
    }

    .form-label {
        font-weight: bold;
    }

    #free {
        margin: 0px;
    }

    .pricing-tabs {
        display: flex;
        gap: 10px;
        margin-top: 10px;
    }

    .pricing-btn {
        flex: 1;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 10px;
        background-color: #fff;
        font-weight: bold;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        color: #28a745; /* Màu chữ xanh lá */
        outline: none;
    }

        .pricing-btn.active {
            border: 2px solid #28a745; /* Viền xanh lá khi active */
            background-color: #E6F4EA; /* Nền xanh nhạt khi active */
            color: #28a745; /* Màu chữ khi active */
        }

        .pricing-btn:hover {
            background-color: #E6F4EA; /* Màu nền khi hover */
        }

        .pricing-btn:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.5); /* Hiệu ứng focus xanh lá */
        }

</style>

<h4 class="container mt-3 container-custom bg-success text-white p-3 align-content-center">Create a new project</h4>

@if (TempData["success"] != null)
{
    <div class="alert alert-success">
        @TempData["success"]
    </div>
}

@if (TempData["error"] != null)
{
    <div class="alert alert-danger">
        @TempData["error"]
    </div>
}

<div class="container container-custom px-5 rounded" style="background: #ffffff; box-shadow: 0 0 10px rgba(0, 169, 127, 0.3); border: 1px solid #00A97F;">
    <form asp-action="@saveBtn" asp-controller="User" method="post" class="row mt-2" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <!-- Phần bên trái chứa các input chính -->
        <input asp-for="@Model.Id" class="form-control" type="hidden" />

        <div class="col-md-7 pe-5">
            <div class="mb-3">
                <label class="form-label fw-bold fs-5">Title</label>
                <input asp-for="@Model.Name" class="form-control" style="border: 1px solid #00A97F; border-radius: 8px;" />
                <span asp-validation-for="@Model.Name" class="text-danger"></span>
            </div>
            @*             <div class="mb-3">
            <label class="form-label fw-bold fs-5">Price</label>
            <input class="form-control" />
            <span class="text-danger"></span>
            </div> *@

            <!-- Phần Donate/Free Pricing Tabs -->
            <div class="mb-3">
                <label class="form-label fw-bold fs-5">Pricing Options</label>

                <div class="tab-content" id="pricingTabsContent">
                    @* <div class="tab-pane fade show active" id="free" role="tabpanel"> *@
                    @*                     <div role="tablist" class="pricing-tabs mb-2">
                    <button class="nav-link active w-100 border border-1 border-secondary" id="free-tab" data-bs-toggle="tab" data-bs-target="#free" type="button" role="tab" aria-controls="free" aria-selected="true">Free</button>
                    <button class="nav-link w-100 border border-1 border-secondary" id="paid-tab" data-bs-toggle="tab" data-bs-target="#paid" type="button" role="tab" aria-controls="paid" aria-selected="false">Paid</button>
                    </div> *@
                    <div role="tablist" class="pricing-tabs">
                        <button class="pricing-btn" id="free-tab" data-bs-toggle="tab" data-bs-target="#free" type="button" role="tab" aria-controls="free" aria-selected="true">
                            $0 n Free
                        </button>
                        <button class="pricing-btn active" id="paid-tab" data-bs-toggle="tab" data-bs-target="#paid" type="button" role="tab" aria-controls="paid" aria-selected="false">
                            Paid
                        </button>
                    </div>

                    <!-- FREE or donate tab -->
                    <div class="tab-pane fade mt-2" id="free" role="tabpanel" aria-labelledby="free-tab">
                        <p>Someone downloading your project will be asked for a donation before getting access. They can skip to download for free.</p>
                        <label for="suggestedDonation" class="mb-1">Price for Free</label>
                        <input type="number" class="form-control" placeholder="10.000" step="1000" readonly value="0">
                        <span asp-validation-for="@Model.Price" class="text-danger"></span>

                        <label for="suggestedDonation" class="my-2">Discount for Free</label>
                        <input type="number" class="form-control" placeholder="30%" step="5" readonly value="0">
                        <span asp-validation-for="@Model.Discount" class="text-danger"></span>
                    </div>

                    <!-- Paid tab -->
                    <div class="tab-pane fade show active mt-2" id="paid" role="tabpanel" aria-labelledby="paid-tab">
                        <p>Minimum price — Minimum price to pay to get download game. The platform will take a 10% commission on the profits generated by users through our service.</p>

                        <p for="suggestedDonation" class="my-2">Original price</p>
                        <input class="form-control mb-2" asp-for="@Model.Price" type="number" id="inputPain" placeholder="10.000" step="1000" min="5000" style="border: 1px solid #00A97F; border-radius: 8px;">
                        <span asp-validation-for="@Model.Price" class="text-danger"></span>

                        <p for="suggestedDonation" class="my-2 mt-2">Discount your price</p>
                        <input asp-for="@Model.Discount" class="form-control" type="number" id="inputDiscount" placeholder="30%" step="5" min="0" max="100" style="border: 1px solid #00A97F; border-radius: 8px;">
                        <span asp-validation-for="@Model.Discount" class="text-danger"></span>
                    </div>
                    @* </div> *@
                </div>
            </div>

            @*             <!-- Discount -->
            <div class="mb-3">
            <label class="form-label fw-bold fs-5">Discount</label>
            <input asp-for="@Model.Discount" class="form-control" />
            <span asp-validation-for="@Model.Discount" class="text-danger"></span>
            </div> *@

            <!-- Upload -->
            <div class="mb-3">
                <label class="form-label fw-bold fs-5">Uploads</label>
                @if (Model.Links != null)
                {
                    @if (Model.Links.Count > 0)
                    {
                        int index = 1;
                        foreach (var item in Model.Links)
                        {
                            if (item.ProviderName.Contains("Google Drive"))
                            {
                                <div class="p-2 mb-2 upload-item" id="item-@index" style="border: 1px solid #00A97F; border-radius: 8px; padding: 10px;">
                                    <p>
                                        <strong>Link file:</strong> <a href="@item.Url" class="d-inline-block text-truncate" style="max-width: 400px;">${@item.Url}</a> <br>

                                        <strong>File Type:</strong> (@item.ProviderName)
                                    </p>

                                    <!-- Nút Delete -->
                                    <div class="text-end" data-bs-toggle="modal" data-bs-target="#deleteModal-@index">
                                        <button class="delete-btn" onclick="removeItem(@index)" title="Delete">
                                            <i class="fa-solid fa-delete-left text-danger"></i>
                                        </button>
                                    </div>
                                </div>
                            }
                            else if (item.ProviderName.Contains("Cloudinary"))
                            {
                                Images.Add(item);
                            }

                            <!-- Hidden Field -->
                            <input type="hidden" name="SerializedLinks" id="SerializedLinks" value="@Newtonsoft.Json.JsonConvert.SerializeObject(Model.Links)" />
                            index++;
                        }
                    }
                }

                <div>
                    <label class="fs-6">Password of game file</label>
                    <input class="form-control mb-2" asp-for="@Model.WinrarPassword" type="text" placeholder="Your password of file game...." style="border: 1px solid #00A97F; border-radius: 8px;">
                    <span asp-validation-for="@Model.WinrarPassword" class="text-danger"></span>

                    <label class="fs-6">Game File</label>
                    <div class="p-2 mb-3" style="border: 1px solid #00A97F; border-radius: 8px; padding: 10px;">
                        <p id="fileInfo">No file uploaded</p>
                    </div>
                </div>

                <input asp-for="gameFile" type="file" name="gameFile" id="fileInput" class="d-none" accept=".rar, .zip" onchange="displayFileInfo()" />
                <button type="button" class="btn btn-success" onclick="confirmDelete()">Upload</button>
                <span asp-validation-for="gameFile" class="m-2">File size limit: 1 GB</span>
            </div>
            <!-- Game File (Upload game file) -->
            @*   <div class="form-group">
            <label class="control-label" asp-for="@Model.gameFile">Upload Game File</label>
            <input type="file" name="gameFile" multiple class="form-control" asp-for="@Model.gameFile" />
            <span asp-validation-for="@Model.gameFile" class="text-danger"></span>
            </div> *@



            <!-- Details -->
            <div class="mb-3">
                <label class="form-label fw-bold fs-5">Details</label>
                <div class="mb-2">
                    <label class="form-label fw-bold fs-6">Description</label>
                    <textarea type="text" asp-for="@Model.Description" class="form-control" required style="border: 1px solid #00A97F; border-radius: 8px; padding: 10px;"></textarea>
                    <span asp-validation-for="@Model.Description" class="text-danger"></span>
                </div>
                <div class="mb-2">
                    <div class="form-group">
                        <label class="form-label fw-bold fs-6">Category</label>
                        <div id="category-container">
                            @if (Model.Categories.Count != 0)
                            {
                                @for (int i = 0; i < Model.Categories.Count; i++)
                                {
                                    <select class="form-select category-select mb-2" asp-for="@Model.Categories[i]" style="border: 1px solid #00A97F; border-radius: 8px;">
                                        @foreach (string cate in ViewBag.Categories)
                                        {
                                            <option value="@cate">@cate</option>
                                        }
                                    </select>
                                }
                            }
                        </div>
                        <span asp-validation-for="@Model.Categories" class="text-danger"></span>
                        <div>
                            <a href="javascript:void(0)" id="add-category" class="m-2 text-success"><i class="fa-solid fa-plus"></i></a>
                            <a href="javascript:void(0)" id="remove-category" class="m-2 text-success"><i class="fa-solid fa-minus"></i></a>
                        </div>
                        <small class="form-text text-muted">Enter categories separated by commas.</small>
                    </div>
                </div>

                <div class="mb-2">
                    <label class="form-label fw-bold fs-6">Platform</label>
                    <select asp-for="@Model.Platform" class="form-select" style="border: 1px solid #00A97F; border-radius: 8px;">
                        <option value="0">Unknown</option>
                        <option value="1">Downloadable</option>
                        <option value="2">HTML</option>
                        <option value="3">WebGL</option>
                        <option value="4">Window</option>
                        <option value="5">Android</option>
                        <option value="6">iOS</option>
                        <option value="7">MacOS</option>
                        <option value="8">Linux</option>
                        <option value="9">Other</option>
                    </select>
                    <span asp-validation-for="@Model.Platform" class="text-danger"></span>
                </div>

                <div class="mb-2">
                    <label class="form-label fw-bold fs-6">Status</label>
                    <select asp-for="@Model.Status" class="form-select" style="border: 1px solid #00A97F; border-radius: 8px;">
                        <option value="0">Inactive</option>
                        <option value="1">Active</option>
                        <option value="2">Block</option>
                        <option value="3">Deleted</option>
                    </select>
                    <span asp-validation-for="@Model.Status" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Phần bên phải cho hình ảnh cover -->
        <div class="col-md-5">
            <div class="text-center">
                <!-- Hình ảnh hiển thị -->
                @if (Images.Count > 0)
                {
                    <img id="coverImagePreview" src="@Images[0].Url" alt="Cover Image" class="border mb-3" style="min-width:200px; max-height:200px; min-height:150px; max-width:300px" />
                    <input type="file" class="d-none" asp-for="ImageFiles" id="coverImageInput" accept="image/*" />
                    <span class="text-danger" asp-validation-for="ImageFiles"></span>
                }
                else
                {
                    <img id="coverImagePreview" src="~/Image/avatar.jpeg" alt="Cover Image" class="border mb-3" style="min-width:200px; max-height:200px; min-height:150px; max-width:300px" />
                    <input type="file" class="d-none" asp-for="ImageFiles" id="coverImageInput" accept="image/*" />
                    <span class="text-danger" asp-validation-for="ImageFiles"></span>
                }
                <!-- Input file ẩn -->
                <!-- Nút để kích hoạt chọn file -->
                <button type="button" class="btn btn-outline-dark mt-2 w-100" onclick="document.getElementById('coverImageInput').click()">Upload Cover Image</button>
            </div>
            <!-- ImageFiles (Upload multiple images) -->
            <div class="mt-3">
                <div class="form-group">
                    <label class="form-label fw-bold fs-6">Image</label>

                    @if (Model.Links != null)
                    {
                        @if (Model.Links.Count > 0)
                        {
                            int index = 1;
                            foreach (var item in Model.Links)
                            {
                                if (item.ProviderName.Contains("Google Drive"))
                                {

                                }
                                else if (item.ProviderName.Contains("Cloudinary"))
                                {
                                    <div class="border p-2 mb-2" id="item-@index">
                                        <div class="text-end">
                                            <button onclick="removeItem(@index)" title="Delete" type="button">
                                                <i class="fa-solid fa-delete-left text-danger"></i>
                                            </button>
                                        </div>
                                        <div>
                                            <img src="@item.Url" class="border mb-3" style="min-width:200px; max-height:200px; min-height:150px; max-width:300px" />
                                            @* <input type="file" multiple class="form-control mb-2" asp-for="@item" /> *@
                                        </div>
                                        <span class="text-danger" asp-validation-for="@item.Url"></span>
                                    </div>
                                }

                                <!-- Hidden Field -->
                                <input type="hidden" name="SerializedLinks" id="SerializedLinks" value="@Newtonsoft.Json.JsonConvert.SerializeObject(Model.Links)" />
                                index++;
                            }
                        }
                    }

                    <div id="image-container">
                        <input type="file" multiple class="form-control mb-2" asp-for="ImageFiles" />
                    </div>
                    <div>
                        <a href="javascript:void(0)" id="add-image" class="m-2 text-success"><i class="fa-solid fa-plus"></i></a>
                        <a href="javascript:void(0)" id="remove-image" class="m-2 text-success"><i class="fa-solid fa-minus"></i></a>
                    </div>
                    <small class="form-text text-muted">You can add multiple images by clicking the "+" button.</small>
                </div>
            </div>
            <!-- ImageFiles (Upload multiple images) -->
            @*             <div class="form-group">
            <label class="control-label">Upload Images</label>
            <input type="file" class="form-control" />
            <span class="text-danger"></span>
            </div> *@
        </div>
        @* <div class="col-md-4">
        <div class="text-center">
        <img src="~/image/avatar.jpeg" alt="Cover Image" class="border mb-3" style="width:200px; height:200px;" />
        <input type="file" name="coverImage" class="d-none" id="coverImageInput" accept="image/*" />
        <button type="button" class="btn btn-outline-dark mt-2 w-100" onclick="document.getElementById('coverImageInput').click()">Upload Cover Image</button>
        </div>
        </div> *@

        <!-- Nút tạo sản phẩm -->
        <div class="col-12 text-end m-4">
            @if (Model.Id != null)
            {
                <a asp-controller="Product" asp-action="ProductDetail" asp-route-id="@Model.Id" class="mx-3 text-secondary">View Page</a>
            }
            <input type="submit" value="Save" class="btn btn-danger" />
        </div>
    </form>
</div>
<script>
    function confirmDelete() {
        const modal = document.getElementById(`deleteModal`);
        if (modal) {
            modal.classList.add("show");
        }
    }

    function closeModal() {
        const modal = document.getElementById(`deleteModal`);
        if (modal) {
            modal.classList.remove("show");
        }
    }

    function confirmUploadGame() {

        // Mở file explorer (tạo event click giả lập)
        document.getElementById('fileInput').click();
        const modal = document.getElementById(`deleteModal`);
        if (modal) {
            modal.classList.remove("show");
        }
    }

</script>
<script type="text/javascript">
    // Sự kiện khi nhấn vào nút "+" để thêm select mới
    document.getElementById('add-category').addEventListener('click', function () {
        // Lấy select đầu tiên hiện có để clone
        var selectElement = document.querySelector('.category-select');

        // Tạo bản sao của select hiện tại
        var newSelect = selectElement.cloneNode(true);  // True để sao chép cả các option

        // Đặt lại giá trị mặc định
        newSelect.selectedIndex = 0;

        // Thêm select mới vào container
        var container = document.getElementById('category-container');
        container.appendChild(newSelect);
    });

    // Sự kiện khi nhấn vào nút "-" để xóa select cuối cùng
    document.getElementById('remove-category').addEventListener('click', function () {
        var container = document.getElementById('category-container');
        var selects = container.getElementsByTagName('select');

        // Chỉ xóa nếu còn nhiều hơn 1 select
        if (selects.length > 1) {
            container.removeChild(selects[selects.length - 1]);
        }
    });

    // Sự kiện khi nhấn vào nút "+" để thêm ô input mới
    document.getElementById('add-image').addEventListener('click', function () {
        // Tạo phần tử input file mới
        var newInput = document.createElement('input');
        newInput.type = 'file';
        newInput.name = 'imageFiles[]';  // Để name là dạng mảng để có thể upload nhiều file
        newInput.multiple = true;  // Cho phép chọn nhiều file cùng lúc
        newInput.classList.add('form-control', 'mb-2');  // Thêm class để form đẹp hơn

        // Thêm input file mới vào container
        var container = document.getElementById('image-container');
        container.appendChild(newInput);
    });

    // Sự kiện khi nhấn vào nút "-" để xóa ô input cuối cùng
    document.getElementById('remove-image').addEventListener('click', function () {
        var container = document.getElementById('image-container');
        var inputs = container.getElementsByTagName('input');

        // Chỉ xóa nếu còn nhiều hơn 1 input
        if (inputs.length > 1) {
            container.removeChild(inputs[inputs.length - 1]);
        }
    });

    // function showUploadedGameFileFromServer() {
    //     // Ghi log để kiểm tra xem hàm này có được gọi không
    //     console.log("Function showUploadedGameFileFromServer is called");

    //     // Lấy thông tin file từ Razor (được truyền từ ViewBag)
    //     var fileNameFromServer = 'gameFileName';
    //     var fileSizeFromServer = 'gameFileSize';

    //     // Ghi log giá trị từ Razor
    //     console.log("File name from server:", fileNameFromServer);
    //     console.log("File size from server:", fileSizeFromServer);

    //     // Nếu có dữ liệu từ server, hiển thị thông tin file
    //     if (fileNameFromServer && fileSizeFromServer > 0) {
    //         const fileInfo = `
    //                 <strong>File Name:</strong> ${fileNameFromServer} <br>
    //                 <strong>File Size:</strong> ${(fileSizeFromServer / 1024 / 1024).toFixed(2)} MB <br>
    //                 <strong>File Type:</strong> (from server)
    @*     //                 <div class="m-2">
        //                     <label class="p-2 border border-1">
        //                         <input type="radio" value="Windows" name="Platforms" /> Windows
        //                     </label>
        //                     <label class="p-2 border border-1">
        //                         <input type="radio" value="MacOS" name="Platforms" /> MacOS
        //                     </label>
        //                     <label class="p-2 border border-1">
        //                         <input type="radio" value="Linux" name="Platforms" /> Linux
        //                     </label>
        //                 </div> *@
        //             `;
        //         document.getElementById('fileInfo').innerHTML = fileInfo;

        //         // Log khi thông tin được hiển thị thành công
        //         console.log("File information is displayed successfully.");
        //     }
        // }

        // // Gọi hàm khi trang load để hiển thị file từ server nếu có
        // window.onload = function () {
        //     console.log("Window loaded, calling showUploadedGameFileFromServer");
        //     showUploadedGameFileFromServer();
        // };

        // Sự kiện thay đổi khi người dùng chọn file mới
        function displayFileInfo() {
            const input = document.getElementById('fileInput');
            const file = input.files[0]; // Lấy file đầu tiên (người dùng có thể chọn nhiều file)

            if (file) {
                // Kiểm tra kích thước file (ví dụ 1GB = 1073741824 bytes)
                if (file.size > 1073741824) {
                    alert('File quá lớn, hãy chọn file dưới 1 GB.');
                    return;
                }

                // Hiển thị thông tin file
                const fileInfo = `
                                                                                                                    <strong>File Name:</strong> <span class="d-inline-block text-truncate" style="max-width: 400px;">${file.name}</span> <br>
                                                                                                            <strong>File Size:</strong> ${(file.size / 1024 / 1024).toFixed(2)} MB <br>
    @* <strong>File Type:</strong> ${file.type} *@
    @*                                 <div class="m-2">
                                                                                                            <label class="p-2 border border-1">
                                                                                                                <input type="radio" value="Windows" name="Platforms" /> Windows
                                                                                                            </label>
                                                                                                            <label class="p-2 border border-1">
                                                                                                                <input type="radio" value="MacOS" name="Platforms" /> MacOS
                                                                                                            </label>
                                                                                                            <label class="p-2 border border-1">
                                                                                                                <input type="radio" value="Linux" name="Platforms" /> Linux
                                                                                                            </label>
                                                                                                        </div> *@
                                                                                                        `;
                document.getElementById('fileInfo').innerHTML = fileInfo;
            }
        }

    // Sự kiện khi chọn file mới từ input
    document.getElementById('fileInput').addEventListener('change', displayFileInfo);


    // Sự kiện khi người dùng chọn tệp mới
    document.getElementById('coverImageInput').addEventListener('change', function (event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                // Thay đổi src của hình ảnh để hiển thị ảnh đã chọn
                document.getElementById('coverImagePreview').src = e.target.result;
            }
            reader.readAsDataURL(file); // Đọc file ảnh dưới dạng URL
        }
    });

    function removeItem(index) {
        let links = JSON.parse(document.getElementById("SerializedLinks").value);

        // Xóa phần tử tại index
        links.splice(index - 1, 1);

        // Cập nhật lại hidden field
        document.getElementById("SerializedLinks").value = JSON.stringify(links);

        // Xóa phần tử khỏi giao diện
        document.getElementById("item-" + index).remove();
    }

    document.addEventListener('DOMContentLoaded', function () {
        function switchToFree() {
            const priceInput = document.getElementById('inputPain');
            const discountInput = document.getElementById('inputDiscount');

            if (priceInput && discountInput) {
                sessionStorage.setItem('originalPrice', priceInput.value);
                sessionStorage.setItem('originalDiscount', discountInput.value);

                priceInput.value = 0;
                discountInput.value = 0;
                priceInput.readOnly = true;
                discountInput.readOnly = true;
            }

            console.log(priceInput.value);
            console.log("Free");
        }

        function switchToPaid() {
            const priceInput = document.getElementById('inputPain');
            const discountInput = document.getElementById('inputDiscount');

            if (priceInput && discountInput) {
                priceInput.value = sessionStorage.getItem('originalPrice') || '';
                discountInput.value = sessionStorage.getItem('originalDiscount') || '';
                priceInput.readOnly = false;
                discountInput.readOnly = false;
            }

            console.log("Pain");
        }

        // Gán hàm cho các button để tránh lỗi null
        document.getElementById('free-tab').onclick = switchToFree;
        document.getElementById('paid-tab').onclick = switchToPaid;
    });

</script>
@section Scripts {

    @await Html.PartialAsync("_ValidationScriptsPartial")

}


<!-- Modal Xác nhận Xóa -->
<div id="deleteModal" class="modal">
    <div class="modal-content">
        <p>Are you sure you want to upload a new game file? This action will delete the current game file</p>
        <form class="modal-buttons">
            <button type="button" onclick="confirmUploadGame()" class="btn-confirm">Upload Game</button>
            <a style="text-decoration:none" onclick="closeModal()" class="btn-cancel">No</a>
        </form>
    </div>
</div>
<!-- Modal Xác nhận Xóa -->


