@using Client.Models.OrderModel
@using Newtonsoft.Json
@using System.Web
@model CartModel
<style>
    body {
        background-color: #eeecec;
    }

    .custom-bg-light {
        background-color: #f8f9fa; /* Màu xám nhạt */
    }

    .payment-icon {
        width: 35px; /* Kích thước của hình ảnh logo */
        height: 35px; /* Kích thước của hình ảnh logo */
        object-fit: contain; /* Đảm bảo hình ảnh không bị méo mó */
    }

    .img-thumbnail {
        width: 100px; /* Kích thước của hình ảnh logo */
        height: 100px; /* Kích thước của hình ảnh logo */
        object-fit: contain; /* Đảm bảo hình ảnh không bị méo mó */
    }
</style>


<div class="container mt-5">
    @* id="checkoutForm" *@
    <form asp-action="Checkout" asp-controller="Order" class="row">
        <!-- Your Order Section -->
        <div class="col-lg-7">
            <h5 class="fw-bold"><i class="fas fa-user"></i>YOUR ORDER</h5>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @* <input type="hidden" id="cartJson" name="cartJson" value="@Html.Raw(JsonConvert.SerializeObject(Model.Order))" /> *@
            @*         <input type="hidden" id="cartJson" name="cartJson"
            value="@Html.Raw(HttpUtility.HtmlEncode(JsonConvert.SerializeObject(Model)))" />
            *@
            <input hidden id="orderJson" name="orderJson" value='@Html.Raw(HttpUtility.HtmlEncode(JsonConvert.SerializeObject(Model)))' />
            @if (Model.Order != null)
            {
                @if (Model.Order.Items != null)
                    foreach (var item in Model.Order.Items)
                    {
                        <div class="custom-bg-light mt-3 shadow-sm border">
                            <div class="d-flex align-items-center">
                                <img src="@item.ImageUrl" alt="@item.ProductName" class="p-2 me-3 img-thumbnail" />
                                <div>
                                    <p class="mb-0 fw-bold">@item.ProductName</p>
                                    <a asp-action="CartRemoveProduct" asp-route-productId="@item.ProductId" class="text-muted">Remove</a>
                                </div>
                                <div class="ms-auto fw-bold p-3">@item.Price.ToString("N0") vnđ</div>
                            </div>
                        </div>
                    }
            }
            else
            {
                <div class="custom-bg-light mt-3 shadow-sm border">
                    Không có sản phẩm nào trong giỏ hàng

                </div>
            }


            <div class="custom-bg-light p-3 shadow-sm">
                <div class="d-flex justify-content-between">
                    <p class="mb-0 text-secondary">All prices include VAT if applicable.</p>
                    @*               @if(@Model.Order.TotalPrice == 0)
                    {
                    <div class="fw-bold">ORDER TOTAL: 0 vnđ</div>
                    } *@
                    @if (Model.Order != null)
                    {
                        @if (Model.Order.Items != null){
                            <div class="fw-bold">ORDER TOTA
                                L: @Model.Order.TotalPrice.ToString("N0") vnđ</div>
                        }
                    }
                    </div>
                </div>
            </div>
            <!-- Your Payment & Gifting Details Section -->
            <div class="col-lg-5">
                <h5 class="fw-bold"><i class="fas fa-user"></i>YOUR PAYMENT & GIFTING DETAILS</h5>

                <div class="custom-bg-light p-3 mt-3 shadow-sm border">
                    <!-- Wallet Payment Method -->
                    <div class="form-check text-secondary  d-flex align-items-center">
                        <input type="radio" id="wallet" name="payment" class="form-check-input">
                        <label for="wallet" class="form-check-label d-flex align-items-center">
                            <img src="~/image/wallet.jpg" class=" mx-3 payment-icon me-2" />
                            Use Wallet Funds (Balance $0.00)
                        </label>
                    </div>
                </div>

                <div class="custom-bg-light p-3 d-flex shadow-sm border fw-bold">
                    <a href="#" class="text-muted">Purchase more Wallet funds & learn more</a>
                </div>


                <div class="custom-bg-light p-3 shadow-sm border">
                    <!-- MoMo Payment Method -->
                    <div class="form-check text-secondary d-flex align-items-center">
                        <input asp-for="PaymentMethod" value="Wallet" type="radio" id="momo" class="form-check-input" checked />
                        <label for="momo" class="form-check-label d-flex align-items-center">
                            <img src="~/image/Logo-MoMo-Square.webp" alt="MoMo Logo" class="mx-3 payment-icon me-2 p" />
                            MOMO
                        </label>
                    </div>
                </div>
                <div class="custom-bg-light p-3 shadow-sm border">
                    <!-- Payos Payment Method -->
                    <div class="form-check text-secondary d-flex align-items-center">
                        <input asp-for="@Model.PaymentMethod" value="CreditCard" type="radio" id="payos" name="PaymentMethod" class="form-check-input">
                        <label for="payos" class="form-check-label d-flex align-items-center">
                            <img src="~/image/icon-payos.png" alt="payos Logo" class="mx-3 payment-icon me-2" />
                            PAY OS
                        </label>
                    </div>
                </div>

                <div class="custom-bg-light p-3 mt-3 shadow-sm border">
                    <!-- Gift this order Checkbox -->
                    <div class="form-check text-secondary">
                        <input type="checkbox" id="gift" name="gift" class="form-check-input">
                        <label for="gift" class="form-check-label">GIFT THIS ORDER</label>
                    </div>
                </div>

                <div class="custom-bg-light p-3 mt-3 shadow-sm border">
                    <!-- Total and Google Pay Button -->
                    <div class="d-flex align-items-center justify-content-between">
                    @if (Model.Order != null)
                    {
                        @if (Model.Order.Items != null)
                        {

                            <h4>@Model.Order.TotalPrice.ToString("N0") vnđ</h4>
                        }
                    }
                        <button type="submit" class="btn btn-dark px-3 py-2 rounded-3" style="width: 200px;">
                            Pay
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
                        @section Scripts {
                        @{
                                await Html.RenderPartialAsync("_ValidationScriptsPartial");
                            }
                        }

                        @* <script>
    $(document).ready(function () {
        $('#checkoutForm').on('submit', function (e) {
            e.preventDefault(); // Ngăn form submit theo cách thông thường

            // Lấy phương thức thanh toán từ form
            const paymentMethod = $('#paymentMethod').val();

            // Lấy dữ liệu từ cookie (nếu lưu giỏ hàng trong cookie)
            const cartJson = getCookie('cart'); // Hàm getCookie để đọc cookie
            if (!cartJson) {
                alert("Cart is empty!");
                return;
            }

            const cart = JSON.parse(cartJson);

            // Cập nhật phương thức thanh toán vào cart
            cart.paymentMethod = paymentMethod;

            // Gửi dữ liệu qua AJAX
            $.ajax({
                url: '/Order/Checkout', // URL tới controller action xử lý
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(cart), // Chuyển dữ liệu thành JSON
                success: function (response) {
                    console.log('Order processed:', response);
                    alert("Order successful!");
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                    alert("Failed to process order!");
                }
            });
        });
    });

    // Hàm để lấy cookie
    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(';').shift();
    }

</script> *@