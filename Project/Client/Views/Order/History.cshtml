@using System.Security.Claims
@* @model Client.Models.AuthenModel.ChangePasswordModel *@
@model Client.Models.OrderModel.OrderViewModel
@using static Client.Models.Enum.UserEnum.User


@{
    var avatar = User.Claims.FirstOrDefault(a => a.Type == "Avatar")?.Value;
    var email = @User.Claims.FirstOrDefault(a => a.Type == ClaimTypes.Email)?.Value;
    var displayName = @User.Claims.FirstOrDefault(a => a.Type == ClaimTypes.GivenName)?.Value;
    var username = @User.Claims.FirstOrDefault(a => a.Type == ClaimTypes.Name)?.Value;
}

<style>
    /* Căn giữa nội dung của các ô trong bảng */
    .table td, .table th {
        text-align: center; /* Căn giữa cho văn bản */
        vertical-align: middle; /* Căn giữa theo chiều dọc */
    }

        /* Căn giữa hình ảnh trong các ô */
        .table td img {
            display: block; /* Đảm bảo hình ảnh chiếm toàn bộ không gian */
            text-align: center;
            justify-content: center;
        }

        /* Căn giữa nội dung của các phần tử ul, li trong bảng */
        .table td ul {
            list-style-type: none; /* Loại bỏ dấu chấm đầu dòng */
            padding: 0;
            text-align: center; /* Căn giữa văn bản trong danh sách */
        }

        .table td li {
            text-align: center; /* Căn giữa văn bản trong mỗi mục danh sách */
        }

        /* Căn giữa cho các icon trong các liên kết */
        .table td a i {
            display: inline-block; /* Đảm bảo icon được căn giữa */
            text-align: center;
            margin-left: auto;
            margin-right: auto;
        }

    /* Cải tiến border cho thead và tbody */
    .table thead {
        background-color: #f8f9fa; /* Màu nền sáng cho thead */
        border-radius: 10px 10px 0 0; /* Làm tròn góc trên của thead */
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1); /* Thêm bóng nhẹ cho thead */
    }

    .table tbody {
        border-radius: 0 0 10px 10px; /* Làm tròn góc dưới của tbody */
        box-shadow: 0px -2px 5px rgba(0, 0, 0, 0.1); /* Thêm bóng nhẹ cho tbody */
    }

        /* Chỉnh sửa khi hover vào dòng */
        .table tbody tr:hover {
            background-color: #00A97F; /* Nền màu #00A97F khi hover vào dòng */
            color: white !important; /* Chữ trắng khi hover vào dòng */
            cursor: pointer; /* Thêm hiệu ứng con trỏ khi hover */
            border-top: 2px solid #00A97F; /* Viền trên của tr khi hover */
            border-bottom: 2px solid #00A97F; /* Viền dưới của tr khi hover */
        }

        /* Giữ nguyên màu nền và chữ trong các ô mặc định */
        .table tbody tr td {
            background-color: transparent; /* Nền của các ô là trong suốt */
            color: inherit; /* Màu chữ kế thừa từ dòng */
        }

    /* Hiệu ứng chuyển động khi hover vào hình ảnh */
    .table td img {
        border-radius: 8px; /* Làm tròn góc hình ảnh */
        box-shadow: 0 0 10px rgba(0, 169, 127, 0.7); /* Bóng cho hình ảnh */
        transition: all 0.3s ease; /* Chuyển tiếp hiệu ứng */
    }

        .table td img:hover {
            transform: scale(1.05); /* Tăng kích thước hình ảnh khi hover */
        }

    /* Chỉnh sửa liên kết trong bảng */
    .table td a {
        color: inherit; /* Màu liên kết kế thừa từ dòng */
        text-decoration: none; /* Loại bỏ gạch dưới */
        transition: color 0.3s ease;
    }

        .table td a:hover {
            color: #00A97F; /* Màu chữ của liên kết khi hover */
        }

        /* Hiệu ứng hover cho các icon trong bảng */
        .table td a i {
            transition: transform 0.5s ease; /* Thêm hiệu ứng chuyển động cho icon */
        }

        /* Khi hover vào icon */
        .table td a:hover i {
            transform: scale(1.5); /* Tăng kích thước icon lên 20% khi hover */
        }
</style>
<style>
    .bt {
        background-color: #f8f9fa;
        color: #6c757d;
        border: none;
        border-radius: 10px;
        margin-top: 2px;
        width: 100%;
        text-align: left;
        padding: 10px;
    }
</style>


<div class="main">
    <div class="row justify-content-center">
        <div class="col-md-3 p-3">
            <div class="d-flex align-items-center mb-3 p-2 rounded border border-1">
                <img src="@avatar" class="rounded me-3" alt="Avatar" style="width:80px; height:80px;" />
                <div class="d-flex flex-column text-truncate">
                    <h5 class="mb-0" title="@displayName">@displayName</h5>
                    <p class="mb-0 text-muted" title="@username">@username</p>
                    <p class="mb-0 text-muted" title="@email">@email</p>
                </div>
            </div>

            <!-- Danh Muc -->
            <div class="nav flex-column">
                <div class="custom-nav-item">
                    <a asp-controller="User" asp-action="Information">
                        <button type="submit">
                            <i class="fas fa-user"></i> User information
                        </button>
                    </a>
                </div>
                @if (User.Identity.IsAuthenticated)
                {
                    string loginTypeAsString = User.FindFirst("LoginType")?.Value;
                    UserLoginType loginType;
                    if (Enum.TryParse(loginTypeAsString, out loginType))
                    {
                        if (loginType == UserLoginType.Local)
                        {
                                          <div class="custom-nav-item">
                                <a asp-controller="User" asp-action="PasswordSecurity">
                                    <button type="button">
                                        <i class="fas fa-lock"></i> Password and Security
                                    </button>
                                </a>
                            </div>
                        }
                    }

                }
                <div class="custom-nav-item">
                    <a asp-controller="Order" asp-action="History">
                        <button type="button" class="bg-success text-white">
                            <i class="fas fa-heart"></i> History Order
                        </button>
                    </a>
                </div>
                <div class="custom-nav-item text-end">
                    <a asp-controller="User" asp-action="Logout">
                        <button type="button">
                            <i class="fas fa-heart"></i> Logout
                        </button>
                    </a>
                </div>
            </div>
        </div>

        <div class="col-md-9 p-4">
            <div class="px-5">
                <table class="table table-bordered table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th scope="col">Order Id</th>
                            <th scope="col">Price</th>
                            <th scope="col">Payment Method</th>
                            <th scope="col">CreateAt</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var i in Model.Orders) {


                            <tr>
                                <td scope="row">@i.Id</td>

                                @if (i.TotalPrice==0)
                                {
                                    <td>Free</td>
                                }
                                else
                                {
                                    <td>@i.TotalPrice</td>
                                }

                                <td>@i.PaymentMethod.ToString()</td>
                                <td>@i.CreatedAt</td>
                                 <td>
                                <a href="javascript:void(0);"
                                   data-url="@Url.Action("OrderDetail", "Admin", new { id = i.Id })"
                                   onclick="showDetailModal(this)"
                                   title="Order Detail">
                                    <i class="fa-solid fa-pen-to-square" style="color:#0b3d0d"></i>
                                </a>


                            </td>
                        </tr>
                        }
                    </tbody>
                </table>


                <div class="d-flex justify-content-between align-items-center mt-3">
        <!-- Total Items -->
        <div>Total: @Model.Orders.Count items</div>

        <!-- Records Per Page -->
        <div class="d-flex align-items-center">
            <form method="get" asp-controller="Order" asp-action="@ViewData["HistoryAction"]" class="d-inline">
                    <select name="pageSize" class="form-select form-select-sm w-auto d-inline-block" onchange="this.form.submit()">
                <option>Select records per page</option>
                <option value="3">3 records per page</option>
                <option value="5">5 records per page</option>
                <option value="10">10 records per page</option>
                <option value="20">20 records per page</option>
            </select>
                <input type="hidden" name="page" value="1" />
            </form>


            <!-- Pagination -->
            <nav aria-label="Page navigation example">
                <ul class="pagination pagination-sm mb-0">
                    <!-- Previous Page -->
                    <li class="page-item @(Model.pageNumber == 1 ? "disabled" : "")">
                        <a class="page-link"
                           asp-controller="Order"
                           asp-action="@ViewData["HistoryAction"]"
                           asp-route-page="@(Model.pageNumber - 1)"
                           asp-route-pageSize="@(ViewContext.HttpContext.Request.Query["pageSize"])">
                            Previous
                        </a>
                    </li>

                    <!-- Page Numbers -->
                    @for (var pg = 1; pg <= Model.pageCount; pg++)
                    {
                        <li class="page-item @(pg == Model.pageNumber ? "active" : "")">
                            <a class="page-link"
                               asp-controller="Order"
                               asp-action="@ViewData["HistoryAction"]"
                               asp-route-page="@pg"
                               asp-route-pageSize="@(ViewContext.HttpContext.Request.Query["pageSize"])">
                                @pg
                            </a>
                        </li>
                    }

                    <!-- Next Page -->
                    <li class="page-item @(Model.pageNumber == Model.pageCount ? "disabled" : "")">
                        <a class="page-link"
                           asp-controller="Order"
                           asp-action="@ViewData["HistoryAction"]"
                           asp-route-page="@(Model.pageNumber + 1)"
                           asp-route-pageSize="@(ViewContext.HttpContext.Request.Query["pageSize"])">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>


            </div>
        </div>
    </div>
</div>
<div id="modalContainer"></div>


    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }

<script>
    function showDetailModal(element) {
        var url = $(element).data('url');

        $.ajax({
            url: url,
            type: 'GET',
            success: function (response) {
                $('#modalContainer').html(response); // Thêm nội dung partial vào modalContainer
                $('#modalOrderDetail').modal('show'); // Hiển thị modal
            },
            error: function () {
                alert('Có lỗi xảy ra khi tải nội dung modal.');
            }
        });
    }
</script>
